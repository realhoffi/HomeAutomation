{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/moment/locale sync de.js","webpack:///./src/enums/enums.ts","webpack:///./src/global/components/container/basePage.tsx","webpack:///./src/global/components/pages/application.tsx","webpack:///./src/global/components/pages/globalApplication.tsx","webpack:///./src/global/components/pages/initApp.tsx","webpack:///./src/global/components/simple/BaseLight.tsx","webpack:///./src/global/components/simple/BaseUebersicht.tsx","webpack:///./src/global/components/simple/BaseWeatherSensor.tsx","webpack:///./src/global/components/simple/BaseWeatherSensorChart.tsx","webpack:///./src/global/components/simple/ButtonRow.tsx","webpack:///./src/global/components/simple/NotFoundPage.tsx","webpack:///./src/global/components/simple/NumberTextField.tsx","webpack:///./src/global/components/simple/Panel.tsx","webpack:///./src/global/components/simple/Routing.tsx","webpack:///./src/global/components/simple/ToolTip.tsx","webpack:///./src/helper/date.ts","webpack:///./src/helper/promise.ts","webpack:///./src/helper/sorting.ts","webpack:///./src/projects/aldi/components/intelligent/Filiale.tsx","webpack:///./src/projects/aldi/components/intelligent/Filialuebersicht.tsx","webpack:///./src/projects/aldi/components/intelligent/Routenuebersicht.tsx","webpack:///./src/projects/aldi/components/intelligent/UploadFilialen.tsx","webpack:///./src/projects/aldi/components/intelligent/UploadRoutes.tsx","webpack:///./src/projects/aldi/components/pages/application.tsx","webpack:///./src/projects/aldi/components/pages/manageRoute.tsx","webpack:///./src/projects/aldi/components/stateless/Ausgabe.tsx","webpack:///./src/projects/aldi/components/stateless/Filiale.tsx","webpack:///./src/projects/aldi/components/stateless/Link.tsx","webpack:///./src/projects/aldi/components/stateless/Routenfahrt.tsx","webpack:///./src/projects/aldi/configuration/columns.tsx","webpack:///./src/projects/system/components/pages/systeminfo.tsx","webpack:///./src/projects/vacuumRoboter/components/pages/application.tsx","webpack:///./src/projects/xiaomi/components/pages/gateways.tsx","webpack:///./src/projects/xiaomi/components/pages/sensors.tsx","webpack:///./src/projects/yeelight/components/pages/application.tsx","webpack:///./src/projects/yeelight/components/simple/Yeelight.tsx"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAgB,uBAAuB;AACvC;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;ACrIA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wE;;;;;;;;;;;;ACxBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,CAAC,uDAAuD;;;;;;;;;;;;;ACPxD;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uBAAuB;AAC1E,8DAA8D,2BAA2B;AACzF,4CAA4C,mCAAmC;AAC/E,wCAAwC,2BAA2B;AACnE;AACA,gDAAgD,4EAA4E;AAC5H,gDAAgD,0EAA0E;AAC1H;AACA,uEAAuE,mCAAmC;AAC1G,8DAA8D,2BAA2B;AACzF,4CAA4C,mCAAmC;AAC/E;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,yDAAyD;AAC1H,4DAA4D,iDAAiD;AAC7G,gDAAgD,SAAS,qBAAqB,EAAE;AAChF,4DAA4D,0CAA0C;AACtG,gDAAgD,SAAS,qBAAqB,EAAE;AAChF,4DAA4D,+CAA+C;AAC3G,gDAAgD,SAAS,qBAAqB,EAAE;AAChF;AACA;AACA;;;;;;;;;;;;;ACjCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,mEAAmE,6CAA6C;AAChH,+DAA+D,0EAA0E;AACzI,+DAA+D,iEAAiE;AAChI,+DAA+D,kEAAkE;AACjI,+DAA+D,iEAAiE;AAChI,+DAA+D,mEAAmE;AAClI,+DAA+D,gEAAgE;AAC/H,+DAA+D,kEAAkE;AACjI,+DAA+D,+DAA+D;AAC9H,mEAAmE;AACnE;AACA;AACA;AACA,iCAAiC,mCAAmC;AACpE;AACA;AACA;AACA;AACA,iCAAiC;AACjC,iCAAiC,iDAAiD;AAClF,iCAAiC,qDAAqD;AACtF,iCAAiC,uDAAuD;AACxF,iCAAiC;AACjC;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;;;;;;;;;;;;;AC3EA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA,aAAa;AACb;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA,aAAa;AACb;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4CAA4C,yDAAyD;AACrG,wCAAwC,2CAA2C;AACnF,oDAAoD,wFAAwF;AAC5I,gDAAgD,2BAA2B;AAC3E,oDAAoD,kCAAkC;AACtF,uDAAuD,oDAAoD;AAC3G;AACA;AACA,kFAAkF,6IAA6I;AAC/N,oDAAoD,kCAAkC;AACtF,uDAAuD,oDAAoD;AAC3G,2DAA2D,4CAA4C,iCAAiC,gDAAgD;AACxL,uEAAuE,8CAA8C;AACrH,6BAA6B;AAC7B,oDAAoD,mCAAmC;AACvF,uDAAuD,oDAAoD;AAC3G,kFAAkF,4KAA4K;AAC9P,oDAAoD,mCAAmC;AACvF,uDAAuD,oDAAoD;AAC3G,kFAAkF,gLAAgL;AAClQ,kFAAkF,wLAAwL;AAC1Q,kFAAkF,kLAAkL;AACpQ;AACA;AACA;;;;;;;;;;;;;AClHA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,2BAA2B;AACjH,4CAA4C,mCAAmC;AAC/E,8EAA8E,oFAAoF;AAClK,wCAAwC,2BAA2B;AACnE,4CAA4C,mCAAmC;AAC/E,mGAAmG,gCAAgC;AACnI,yGAAyG,yVAAyV;AAClc,oGAAoG,qMAAqM;AACzS;AACA;AACA;;;;;;;;;;;;;AC/HA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,uBAAuB,uCAAuC;AAC9D;AACA;AACA;AACA,4CAA4C,0DAA0D;AACtG,wCAAwC,mCAAmC;AAC3E,oDAAoD;AACpD,kFAAkF;AAClF;AACA,6BAA6B,oGAAoG,IAAI;AACrI;AACA,oDAAoD,2BAA2B;AAC/E,wDAAwD,mCAAmC;AAC3F,2DAA2D,oDAAoD;AAC/G,oDAAoD,2BAA2B;AAC/E,wDAAwD,kCAAkC;AAC1F,2DAA2D,oDAAoD;AAC/G;AACA,8DAA8D,qEAAqE;AACnI,sGAAsG,kCAAkC;AACxI,2DAA2D,oDAAoD;AAC/G,qHAAqH,oDAAoD;AACzK;AACA;AACA;;;;;;;;;;;;;+CCtCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D,mCAAmC,wBAAwB;AAC3D,mCAAmC,wBAAwB;AAC3D,mCAAmC,wBAAwB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gCAAgC;AAC5D,4BAA4B,sCAAsC;AAClE;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,2BAA2B;AAClG,4CAA4C,mCAAmC;AAC/E;AACA;AACA;AACA,wFAAwF,kFAAkF;AAC1K;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,oFAAoF;AACtK;AACA;AACA,4CAA4C,2BAA2B;AACvE,wCAAwC,mCAAmC;AAC3E,4CAA4C,2BAA2B;AACvE,gDAAgD,mCAAmC;AACnF;AACA,uDAAuD,4EAA4E;AACnI,4CAA4C,2BAA2B;AACvE,gDAAgD,mCAAmC;AACnF;AACA;AACA;;;;;;;;;;;;;;AC/PA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B;AACvE,wCAAwC,qDAAqD;AAC7F,4EAA4E,0EAA0E,mBAAmB,+IAA+I;AACxT,4EAA4E,8EAA8E,qBAAqB,qJAAqJ;AACpU;AACA;AACA;;;;;;;;;;;;;ACZA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,uDAAuD,YAAY;AACnE,wCAAwC,yBAAyB;AACjE;AACA;AACA;AACA,kEAAkE,yBAAyB;AAC3F;AACA;AACA;;;;;;;;;;;;;ACfA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,+PAA+P;AACxU;AACA;AACA;;;;;;;;;;;;;AC5BA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;AACpE,wCAAwC,oEAAoE;AAC5G,4CAA4C,6DAA6D;AACzG,8DAA8D,0BAA0B,gCAAgC;AACxH;AACA;AACA;AACA,yBAAyB,iEAAiE;AAC1F,gDAAgD;AAChD;AACA;AACA,yBAAyB,EAAE;AAC3B,qDAAqD,oDAAoD;AACzG;AACA,4EAA4E,0BAA0B;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClDA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,+DAA+D,WAAW,gBAAgB;AAC1F;AACA;AACA;AACA,yEAAyE,2CAA2C;AACpH,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA,+DAA+D,WAAW,gBAAgB;AAC1F;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;AACA;;;;;;;;;;;;;ACzBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,4CAA4C,SAAS,oBAAoB,EAAE;AAC3E,wCAAwC,gDAAgD,4BAA4B,EAAE;AACtH,6CAA6C,wFAAwF;AACrI,wCAAwC,+CAA+C,yCAAyC,EAAE;AAClI,4CAA4C,uCAAuC;AACnF,8CAA8C,yCAAyC;AACvF;AACA;AACA;;;;;;;;;;;;;ACbA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;+CC5CA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;AChCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACxBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,gBAAgB;AAC5F;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,6EAA6E;AACvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,2gBAA2gB;AAC/jB,wCAAwC,2BAA2B;AACnE,4CAA4C,mCAAmC;AAC/E,gEAAgE;AAChE;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;;;;;;;;;;;;;+CClQA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,4CAA4C,oDAAoD;AAChG,sEAAsE,6BAA6B,mBAAmB,mEAAmE;AACzL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,+fAA+f;AACrkB;AACA;AACA;;;;;;;;;;;;;;+CC9NA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,4CAA4C,oDAAoD;AAChG,sEAAsE,6BAA6B,mBAAmB,mEAAmE;AACzL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,sEAAsE,yfAAyf;AAC/jB;AACA;AACA;;;;;;;;;;;;;;+CCzNA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sCAAsC;AACjE,SAAS;AACT;AACA;AACA,2BAA2B,gBAAgB;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,+BAA+B,gBAAgB;AAC/C,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,yBAAyB;AACnG;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC;AAC5G;AACA;AACA,wCAAwC,2BAA2B;AACnE,4CAA4C,mCAAmC;AAC/E,gDAAgD,SAAS,kBAAkB,EAAE;AAC7E;AACA,uDAAuD,kCAAkC;AACzF,mEAAmE,sCAAsC;AACzG,yBAAyB;AACzB,wCAAwC,2BAA2B;AACnE,4CAA4C,mCAAmC;AAC/E,qDAAqD,iDAAiD,gBAAgB,EAAE;AACxH,wCAAwC,2BAA2B;AACnE,4CAA4C,mCAAmC;AAC/E,gEAAgE;AAChE;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;;;;;;;;;;;;;;+CChLA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,QAAQ;AAC3E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA,wBAAwB,yCAAyC;AACjE,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2BAA2B;AACnE,4CAA4C,mCAAmC;AAC/E,qDAAqD,wCAAwC;AAC7F,wCAAwC,2BAA2B;AACnE,4CAA4C,mCAAmC;AAC/E,gEAAgE;AAChE;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;;;;;;;;;;;;;;ACtFA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,uEAAuE;AACxJ,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,gEAAgE;AAC7I,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,8DAA8D;AACzI,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAA4C;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,yCAAyC;AAC7G,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uBAAuB,qDAAqD;AAC5E;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,mEAAmE,uKAAuK;AAC1O,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mEAAmE,8JAA8J;AACjO,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gDAAgD,2BAA2B;AAC3E,4CAA4C,mCAAmC;AAC/E;AACA;AACA,wCAAwC,2BAA2B;AACnE,4CAA4C,mCAAmC;AAC/E,wDAAwD,+IAA+I;AACvM,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,wCAAwC,2BAA2B;AACnE,4CAA4C,mCAAmC;AAC/E,wDAAwD,uHAAuH;AAC/K;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;;;;;;;;;;;;+CCjKA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,QAAQ;AAC3E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA,wBAAwB,yCAAyC;AACjE,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qEAAqE,UAAU;AAC/E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA,wBAAwB,yCAAyC;AACjE,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,YAAY;AAC9D;AACA;AACA,mDAAmD,0CAA0C;AAC7F,SAAS;AACT;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0DAA0D,gEAAgE,uBAAuB;AACjJ,4CAA4C,2BAA2B;AACvE,gDAAgD,mCAAmC;AACnF,4DAA4D,iJAAiJ,+CAA+C,kBAAkB,yBAAyB,GAAG;AAC1S,sEAAsE,qKAAqK;AAC3O,yBAAyB;AACzB,4CAA4C,2BAA2B;AACvE,gDAAgD,mCAAmC;AACnF,4DAA4D,sJAAsJ,kDAAkD,kBAAkB,4BAA4B,GAAG;AACrT,qHAAqH,oDAAoD;AACzK;AACA,gFAAgF,kPAAkP;AAClU,6BAA6B;AAC7B,4CAA4C,2BAA2B;AACvE,gDAAgD,mCAAmC;AACnF,4DAA4D,+JAA+J,sDAAsD,kBAAkB,gCAAgC,GAAG;AACtU;AACA,qGAAqG,oDAAoD;AACzJ;AACA,wFAAwF,8LAA8L;AACtR,6BAA6B;AAC7B,4CAA4C,2BAA2B;AACvE,gDAAgD,mCAAmC;AACnF,4DAA4D,uJAAuJ,kDAAkD,kBAAkB,4BAA4B,GAAG;AACtT,qHAAqH,oDAAoD;AACzK;AACA,gFAAgF,8eAA8e;AAC9jB,6BAA6B;AAC7B,4CAA4C,2BAA2B;AACvE,gDAAgD,mCAAmC;AACnF,oEAAoE;AACpE;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,6BAA6B,EAAE,0CAA0C,8CAA8C,wBAAwB;AAC/I;AACA;AACA;;;;;;;;;;;;;;ACvWA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,qDAAqD,YAAY;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,4LAA4L;AAChP;AACA;AACA,iBAAiB,+BAA+B,GAAG,8BAA8B,2BAA2B;AAC5G,wCAAwC,0CAA0C;AAClF,yEAAyE,6LAA6L;AACtQ,wCAAwC,0CAA0C;AAClF,wEAAwE,yKAAyK;AACjP;AACA;AACA;;;;;;;;;;;;;ACnCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4DAA4D;AACxG,wCAAwC,mCAAmC;AAC3E,oDAAoD,yIAAyI,kGAAkG,qBAAqB,+BAA+B,WAAW;AAC9V,gDAAgD,2BAA2B;AAC3E,oDAAoD,0CAA0C;AAC9F;AACA;AACA,+DAA+D,qHAAqH;AACpL,2EAA2E,sDAAsD;AACjI,iCAAiC;AACjC,oDAAoD,yCAAyC;AAC7F,oFAAoF,gJAAgJ;AACpO,oDAAoD,yCAAyC;AAC7F,oFAAoF,qIAAqI;AACzN,oDAAoD,0CAA0C;AAC9F,qFAAqF,sIAAsI;AAC3N,oDAAoD,gDAAgD;AACpG,oFAAoF,oHAAoH;AACxM,oDAAoD,gDAAgD;AACpG,qFAAqF,8GAA8G;AACnM,oDAAoD,gDAAgD;AACpG,oFAAoF,+IAA+I;AACnO,oDAAoD,gDAAgD;AACpG,oFAAoF,2IAA2I;AAC/N;AACA;AACA;;;;;;;;;;;;;AC7EA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA,qDAAqD,YAAY;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,kEAAkE;AAC9G,wCAAwC,yCAAyC;AACjF;AACA,wEAAwE,0FAA0F;AAClK,wCAAwC,2CAA2C;AACnF,yEAAyE,oGAAoG;AAC7K,wCAAwC,yCAAyC;AACjF,4EAA4E;AAC5E;AACA;AACA,qBAAqB,mCAAmC;AACxD;AACA;AACA;;;;;;;;;;;;;AChCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,qDAAqD,YAAY;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,qEAAqE;AACjH,wCAAwC,gDAAgD;AACxF,qEAAqE,gDAAgD;AACrH,wCAAwC,gDAAgD;AACxF,0EAA0E,iSAAiS;AAC3W,wCAAwC,gDAAgD;AACxF,4EAA4E;AAC5E;AACA;AACA,qBAAqB,0CAA0C;AAC/D;AACA;AACA;;;;;;;;;;;;;AChCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;+CC5LA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA,SAAS;AACT;AACA,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2CAA2C;AACtE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,GAAG,YAAY,KAAK;AACtC;AACA;AACA,4CAA4C,2BAA2B;AACvE,wCAAwC,mCAAmC;AAC3E,qEAAqE,oDAAoD;AACzH;AACA;AACA;AACA;AACA,yDAAyD,sCAAsC,IAAI,sCAAsC;AACzI;AACA;AACA;AACA,0DAA0D,sCAAsC,IAAI,kCAAkC;AACtI;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B;AACvE,wCAAwC,mCAAmC;AAC3E,6EAA6E,oDAAoD;AACjI,6EAA6E,2BAA2B;AACxG,gDAAgD,kEAAkE;AAClH;AACA;AACA;;;;;;;;;;;;;;ACjFA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;+CCnBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA,SAAS;AACT;AACA,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yCAAyC;AACpE,SAAS;AACT,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B;AACvE,wCAAwC,mCAAmC;AAC3E;AACA,wFAAwF,oDAAoD;AAC5I,4CAA4C,2BAA2B;AACvE;AACA;AACA,4DAA4D,sEAAsE;AAClI,wEAAwE;AACxE;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6GAA6G,QAAQ;AACrH,iCAAiC;AACjC,6GAA6G,QAAQ;AACrH;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,iCAAiC;AACjC;AACA,iCAAiC,EAAE;AACnC,qBAAqB;AACrB;AACA;AACA;;;;;;;;;;;;;;+CC7FA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA,SAAS;AACT;AACA,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kCAAkC;AAC7D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B;AACvE,wCAAwC,mCAAmC;AAC3E,sGAAsG,oDAAoD;AAC1J,4CAA4C,2BAA2B;AACvE;AACA;AACA,4DAA4D,mFAAmF;AAC/I,wFAAwF,wCAAwC;AAChI,qBAAqB;AACrB;AACA;AACA;;;;;;;;;;;;;;+CCrDA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA,SAAS;AACT;AACA,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iCAAiC;AAC5D,SAAS;AACT,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD,2CAA2C;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B;AACvE,wCAAwC,mCAAmC;AAC3E,oGAAoG,oDAAoD;AACxJ,4CAA4C,2BAA2B;AACvE;AACA;AACA,4DAA4D,kFAAkF;AAC9I;AACA,0EAA0E,wSAAwS;AAClX,qBAAqB;AACrB;AACA;AACA;;;;;;;;;;;;;;AC1FA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA,aAAa;AACb;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA,aAAa;AACb;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4CAA4C,yDAAyD;AACrG,wCAAwC,2CAA2C;AACnF,oDAAoD,wFAAwF;AAC5I,gDAAgD,2BAA2B;AAC3E,oDAAoD,kCAAkC;AACtF,uDAAuD,oDAAoD;AAC3G;AACA;AACA,kFAAkF,6IAA6I;AAC/N,oDAAoD,kCAAkC;AACtF,uDAAuD,oDAAoD;AAC3G,2DAA2D,4CAA4C,iCAAiC,gDAAgD;AACxL,uEAAuE,8CAA8C;AACrH,6BAA6B;AAC7B,oDAAoD,mCAAmC;AACvF,uDAAuD,oDAAoD;AAC3G,kFAAkF,4KAA4K;AAC9P,oDAAoD,mCAAmC;AACvF,uDAAuD,oDAAoD;AAC3G,kFAAkF,4LAA4L;AAC9Q,oDAAoD,mCAAmC;AACvF,uDAAuD,oDAAoD;AAC3G,kFAAkF,gLAAgL;AAClQ,kFAAkF,wLAAwL;AAC1Q,kFAAkF,kLAAkL;AACpQ;AACA;AACA","file":"js/application.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"application\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendor.bundle\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive de.js\";","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Display\"] = 0] = \"Display\";\r\n    PageType[PageType[\"Edit\"] = 1] = \"Edit\";\r\n    PageType[PageType[\"Add\"] = 2] = \"Add\";\r\n})(PageType = exports.PageType || (exports.PageType = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nclass BasePage extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        console.log(\"render BasePage\");\r\n        let renderElement = null;\r\n        let content = (React.createElement(\"div\", { className: \"ms-Grid\" },\r\n            this.props.Header && (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" }, this.props.Header))),\r\n            React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                this.props.Navigation && [\r\n                    React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-md12 ms-lg3 ms-xl2\", key: \"navigation\" }, this.props.Navigation),\r\n                    React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-md12 ms-lg9 ms-xl10\", key: \"content\" }, this.props.Body)\r\n                ],\r\n                !this.props.Navigation && (React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" }, this.props.Body))),\r\n            this.props.Footer && (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" }, this.props.Footer)))));\r\n        renderElement = this.props.IncludeFabricElement ? (React.createElement(office_ui_fabric_react_1.Fabric, null, content)) : (content);\r\n        return renderElement;\r\n    }\r\n}\r\nexports.BasePage = BasePage;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst application_1 = require(\"../../../projects/yeelight/components/pages/application\");\r\nconst sensors_1 = require(\"../../../projects/xiaomi/components/pages/sensors\");\r\nconst gateways_1 = require(\"../../../projects/xiaomi/components/pages/gateways\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst PivotItem_1 = require(\"office-ui-fabric-react/lib/components/Pivot/PivotItem\");\r\nconst systeminfo_1 = require(\"../../../projects/system/components/pages/systeminfo\");\r\nclass Application extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            GatewayInformations: React.createElement(gateways_1.Application, null),\r\n            SensorInformations: React.createElement(sensors_1.Application, null),\r\n            YeelightInformations: React.createElement(application_1.Application, null),\r\n            SystemInformations: React.createElement(systeminfo_1.SystemInfo, null)\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount Application\");\r\n    }\r\n    render() {\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(office_ui_fabric_react_1.Pivot, { linkSize: office_ui_fabric_react_1.PivotLinkSize.large },\r\n                React.createElement(PivotItem_1.PivotItem, { linkText: \"Sensoren\", itemIcon: \"CloudWeather\" },\r\n                    React.createElement(\"div\", { style: { paddingTop: \"15px\" } }, this.state.SensorInformations)),\r\n                React.createElement(PivotItem_1.PivotItem, { linkText: \"Gateways\", itemIcon: \"Light\" },\r\n                    React.createElement(\"div\", { style: { paddingTop: \"15px\" } }, this.state.GatewayInformations)),\r\n                React.createElement(PivotItem_1.PivotItem, { linkText: \"Yeelights\", itemIcon: \"Lightbulb\" },\r\n                    React.createElement(\"div\", { style: { paddingTop: \"15px\" } }, this.state.YeelightInformations)))));\r\n    }\r\n}\r\nexports.Application = Application;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst react_router_dom_1 = require(\"react-router-dom\");\r\nconst application_1 = require(\"./application\");\r\nconst application_2 = require(\"../../../projects/yeelight/components/pages/application\");\r\nconst application_3 = require(\"../../../projects/vacuumRoboter/components/pages/application\");\r\nconst application_4 = require(\"../../../projects/aldi/components/pages/application\");\r\nconst sensors_1 = require(\"../../../projects/xiaomi/components/pages/sensors\");\r\nconst gateways_1 = require(\"../../../projects/xiaomi/components/pages/gateways\");\r\nconst NotFoundPage_1 = require(\"../../components/simple/NotFoundPage\");\r\nconst Routing_1 = require(\"../simple/Routing\");\r\nconst basePage_1 = require(\"../container/basePage\");\r\nconst systeminfo_1 = require(\"../../../projects/system/components/pages/systeminfo\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nclass GlobalApplication extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { selectedNavKey: this.getRouteIdFromHash() };\r\n        this.routeChanged = this.routeChanged.bind(this);\r\n    }\r\n    getRouteIdFromHash() {\r\n        return document.location.hash\r\n            ? \"#\" + document.location.hash.replace(\"#/\", \"\")\r\n            : \"#\";\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Web-Application by Florian Hoffmann\";\r\n        console.log(\"componentDidMount Application\");\r\n        window.addEventListener(\"hashchange\", this.routeChanged);\r\n    }\r\n    routeChanged() {\r\n        console.log(\"route changed\");\r\n        let navKey = this.getRouteIdFromHash();\r\n        if (this.state.selectedNavKey === navKey) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            selectedNavKey: navKey\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"hashchange\", this.routeChanged);\r\n    }\r\n    render() {\r\n        console.log(\"render Application\");\r\n        return (React.createElement(basePage_1.BasePage, { IncludeFabricElement: true, Body: React.createElement(react_router_dom_1.Switch, null,\r\n                React.createElement(Routing_1.RedirectWithStatus, { status: 302, from: \"/courses\", to: \"/aldi\" }),\r\n                React.createElement(react_router_dom_1.Route, { exact: true, path: \"/\", component: application_1.Application, key: \"r1\" }),\r\n                React.createElement(react_router_dom_1.Route, { path: \"/system\", component: systeminfo_1.SystemInfo, key: \"r8\" }),\r\n                React.createElement(react_router_dom_1.Route, { path: \"/light\", component: application_2.Application, key: \"r2\" }),\r\n                React.createElement(react_router_dom_1.Route, { path: \"/aldi\", component: application_4.Application, key: \"r3\" }),\r\n                React.createElement(react_router_dom_1.Route, { path: \"/vacuum\", component: application_3.Application, key: \"r4\" }),\r\n                React.createElement(react_router_dom_1.Route, { path: \"/sensors\", component: sensors_1.Application, key: \"r6\" }),\r\n                React.createElement(react_router_dom_1.Route, { path: \"/gateways\", component: gateways_1.Application, key: \"r7\" }),\r\n                React.createElement(react_router_dom_1.Route, { path: \"*\", component: NotFoundPage_1.NotFoundPage, key: \"r5\" })), Navigation: React.createElement(\"div\", null,\r\n                React.createElement(office_ui_fabric_react_1.Nav, { selectedKey: this.state.selectedNavKey, groups: [\r\n                        {\r\n                            name: \"Navigation\",\r\n                            links: [\r\n                                { key: \"#\", name: \"root\", url: \"#\" },\r\n                                {\r\n                                    key: \"#system\",\r\n                                    name: \"System-Informationen\",\r\n                                    url: \"#system\"\r\n                                },\r\n                                { key: \"#light\", name: \"Yeelight\", url: \"#light\" },\r\n                                { key: \"#sensors\", name: \"Sensoren\", url: \"#sensors\" },\r\n                                { key: \"#gateways\", name: \"Gateways\", url: \"#gateways\" },\r\n                                { key: \"#aldi\", name: \"Aldi\", url: \"#aldi\" }\r\n                            ]\r\n                        }\r\n                    ] })) }));\r\n    }\r\n}\r\nexports.GlobalApplication = GlobalApplication;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ReactDOM = require(\"react-dom\");\r\nconst React = require(\"react\");\r\nconst globalApplication_1 = require(\"./globalApplication\");\r\nconst react_router_dom_1 = require(\"react-router-dom\");\r\nconst icons_1 = require(\"@uifabric/icons\");\r\nicons_1.initializeIcons();\r\nwindow.onload = () => {\r\n    ReactDOM.render(React.createElement(react_router_dom_1.HashRouter, null,\r\n        React.createElement(globalApplication_1.GlobalApplication, null)), document.getElementById(\"reactRoot\"));\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst Panel_1 = require(\"../../../global/components/simple/Panel\");\r\nclass BaseLight extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { gateways: [] };\r\n        this.colorSchemes = [\r\n            {\r\n                name: \"Bitte auswählen...\",\r\n                color: { r: 0, g: 0, b: 0 },\r\n                brightness: -1\r\n            },\r\n            {\r\n                name: \"Romantik\",\r\n                color: { r: 235, g: 104, b: 119 },\r\n                brightness: 43\r\n            },\r\n            {\r\n                name: \"Sky\",\r\n                color: { r: 0, g: 255, b: 127 },\r\n                brightness: 43\r\n            }\r\n        ];\r\n        this.brightnessChanged = this.brightnessChanged.bind(this);\r\n        this.togglePower = this.togglePower.bind(this);\r\n        this.setBrightness = this.setBrightness.bind(this);\r\n        this.colorSchemeChanged = this.colorSchemeChanged.bind(this);\r\n        this.onRedChanged = this.onRedChanged.bind(this);\r\n        this.onBlueChanged = this.onBlueChanged.bind(this);\r\n        this.onGreenChanged = this.onGreenChanged.bind(this);\r\n    }\r\n    colorSchemeChanged(event) {\r\n        let schemeIndex = event.currentTarget.selectedIndex;\r\n        let schema = this.colorSchemes[schemeIndex];\r\n        if (!schema || schema.intensity === -1)\r\n            return;\r\n        this.props.onColorSchemaChanged(this.props.lightInformation, schema.color, schema.brightness);\r\n    }\r\n    togglePower() {\r\n        this.props.onPowerChanged(this.props.lightInformation);\r\n    }\r\n    setBrightness(value) {\r\n        this.props.onBrightnessChanged(this.props.lightInformation, value);\r\n    }\r\n    brightnessChanged(value) {\r\n        if (this.sliderDelay) {\r\n            clearTimeout(this.sliderDelay);\r\n        }\r\n        this.sliderDelay = setTimeout(() => {\r\n            this.setBrightness(value);\r\n        }, 400);\r\n    }\r\n    onColorChanged(color) {\r\n        this.props.onColorChanged(this.props.lightInformation, color);\r\n    }\r\n    onRedChanged(value) {\r\n        let color = Object.assign({}, this.props.lightInformation.rgb);\r\n        color.r = value;\r\n        if (this.sliderDelay) {\r\n            clearTimeout(this.sliderDelay);\r\n        }\r\n        this.sliderDelay = setTimeout(() => {\r\n            this.onColorChanged(color);\r\n        }, 400);\r\n    }\r\n    onBlueChanged(value) {\r\n        let color = Object.assign({}, this.props.lightInformation.rgb);\r\n        color.b = value;\r\n        if (this.sliderDelay) {\r\n            clearTimeout(this.sliderDelay);\r\n        }\r\n        this.sliderDelay = setTimeout(() => {\r\n            this.onColorChanged(color);\r\n        }, 400);\r\n    }\r\n    onGreenChanged(value) {\r\n        let color = Object.assign({}, this.props.lightInformation.rgb);\r\n        color.g = value;\r\n        if (this.sliderDelay) {\r\n            clearTimeout(this.sliderDelay);\r\n        }\r\n        this.sliderDelay = setTimeout(() => {\r\n            this.onColorChanged(color);\r\n        }, 400);\r\n    }\r\n    render() {\r\n        console.log(\"baseLight render\");\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\", key: \"list_\" + this.props.id },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-lg12\" },\r\n                React.createElement(Panel_1.Panel, { headerText: this.props.lightInformation.name, className: \"custom-padding-bottom-10px\" },\r\n                    React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm6\" },\r\n                            React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, this.props.lightInformation.power\r\n                                ? \"Licht anschalten\"\r\n                                : \"Licht ausschalten\"),\r\n                            React.createElement(office_ui_fabric_react_1.Toggle, { key: \"light_power_\" + this.props.id, checked: this.props.lightInformation.power, onText: \"On\", offText: \"Off\", onChanged: this.togglePower })),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm6\" },\r\n                            React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"Farbschema\"),\r\n                            React.createElement(\"select\", { onChange: this.colorSchemeChanged, style: { padding: \"10px\", width: \"100%\" }, disabled: !this.props.lightInformation.power }, this.colorSchemes.map((schema, index) => {\r\n                                return (React.createElement(\"option\", { key: \"option_schema_\" + index, value: index }, schema.name));\r\n                            }))),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                            React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"Leuchtst\\u00E4rke\"),\r\n                            React.createElement(office_ui_fabric_react_1.Slider, { min: 1, max: 100, step: 1, disabled: !this.props.lightInformation.power, value: this.props.lightInformation.brightness, showValue: true, onChange: this.brightnessChanged })),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                            React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"RGB Farben\"),\r\n                            React.createElement(office_ui_fabric_react_1.Slider, { label: \"Rot\", min: 0, max: 255, step: 1, disabled: !this.props.lightInformation.power, value: this.props.lightInformation.rgb.r, showValue: true, onChange: this.onRedChanged }),\r\n                            React.createElement(office_ui_fabric_react_1.Slider, { label: \"Gr\\u00FCn\", min: 0, max: 255, step: 1, disabled: !this.props.lightInformation.power, value: this.props.lightInformation.rgb.g, showValue: true, onChange: this.onGreenChanged }),\r\n                            React.createElement(office_ui_fabric_react_1.Slider, { label: \"Blau\", min: 0, max: 255, step: 1, disabled: !this.props.lightInformation.power, value: this.props.lightInformation.rgb.b, showValue: true, onChange: this.onBlueChanged })))))));\r\n    }\r\n}\r\nexports.BaseLight = BaseLight;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst react_1 = require(\"react\");\r\nclass BaseUebersicht extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectionHasChanged = this.selectionHasChanged.bind(this);\r\n        this.onColumnClick = this.onColumnClick.bind(this);\r\n        this.closeContextualMenue = this.closeContextualMenue.bind(this);\r\n        this.deleteClicked = this.deleteClicked.bind(this);\r\n        this.editClicked = this.editClicked.bind(this);\r\n        this.callCtxVisible = this.callCtxVisible.bind(this);\r\n        let commandItems = [\r\n            {\r\n                name: \"Bearbeiten\",\r\n                key: \"edit\",\r\n                icon: \"edit\",\r\n                itemType: office_ui_fabric_react_1.ContextualMenuItemType.Normal,\r\n                onClick: this.editClicked\r\n            },\r\n            {\r\n                key: \"divider_1\",\r\n                itemType: office_ui_fabric_react_1.ContextualMenuItemType.Divider\r\n            },\r\n            {\r\n                name: \"Löschen\",\r\n                key: \"delete\",\r\n                icon: \"Delete\",\r\n                itemType: office_ui_fabric_react_1.ContextualMenuItemType.Normal,\r\n                onClick: this.deleteClicked\r\n            }\r\n        ];\r\n        this.state = {\r\n            ctxMenues: commandItems,\r\n            columns: this.props.columns,\r\n            items: this.props.items\r\n        };\r\n        this._selection = new office_ui_fabric_react_1.Selection({\r\n            onSelectionChanged: this.selectionHasChanged\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps, prevState, prevContext) {\r\n        if (JSON.stringify(this.props.items) !== JSON.stringify(prevProps.items)) {\r\n            this._selection[\"_onSelectionChanged\"] = undefined;\r\n            this._selection.getItems().forEach((e, i) => {\r\n                this._selection.setIndexSelected(i, false, false);\r\n            });\r\n            this._selection.setAllSelected(false);\r\n            this._selection[\"_onSelectionChanged\"] = this.selectionHasChanged;\r\n            this._selection.setItems(this.props.items, true);\r\n            this.callCtxVisible(false);\r\n            this.props.onItemSelectionChanged(this._selection.getSelection());\r\n        }\r\n    }\r\n    callCtxVisible(isVisible) {\r\n        if (this.props.ctxVisible === isVisible) {\r\n            return;\r\n        }\r\n        this.props.onCtxMenueVisible(isVisible);\r\n    }\r\n    selectionHasChanged() {\r\n        console.log(\"selectionHasChanged\");\r\n        let selection = this._selection.getSelection();\r\n        this.props.onItemSelectionChanged(selection);\r\n        if (!selection) {\r\n            this.callCtxVisible(false);\r\n        }\r\n    }\r\n    deleteClicked() {\r\n        this.props\r\n            .onDeleteItemClicked(this._selection.getSelection())\r\n            .then(() => {\r\n            this._selection.setAllSelected(false);\r\n            this.callCtxVisible(false);\r\n        })\r\n            .catch(() => {\r\n            alert(\"Es ist ein Fehler beim Löschen der Aktion aufgetreten\");\r\n        });\r\n    }\r\n    editClicked() {\r\n        let selection = this._selection.getSelection();\r\n        if (!selection || selection.length < 1) {\r\n            return;\r\n        }\r\n        this.props.onEditItemClick(selection[0]);\r\n    }\r\n    closeContextualMenue() {\r\n        this.props.onCtxMenueVisible(false);\r\n    }\r\n    onColumnClick(ev, column) {\r\n        const { columns, items } = this.state;\r\n        let newColumns = columns.slice();\r\n        let currColumn = newColumns.filter((currCol, idx) => {\r\n            return column.key === currCol.key;\r\n        })[0];\r\n        newColumns.forEach((newCol) => {\r\n            if (newCol === currColumn) {\r\n                currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n                currColumn.isSorted = true;\r\n            }\r\n            else {\r\n                newCol.isSorted = false;\r\n                newCol.isSortedDescending = true;\r\n            }\r\n        });\r\n        this.props.sortByPropertyName(currColumn.fieldName, currColumn.isSortedDescending);\r\n        this.setState({\r\n            columns: newColumns\r\n        });\r\n    }\r\n    render() {\r\n        console.log(\"render BaseUebersicht\");\r\n        return (React.createElement(react_1.Fragment, null,\r\n            this.props.useCommandbar &&\r\n                this.props.commandbarItems &&\r\n                this.props.commandbarItems.length > 0 && (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                    React.createElement(office_ui_fabric_react_1.CommandBar, { isSearchBoxVisible: this.props.enableSearchBox, items: this.props.commandbarItems })))),\r\n            React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                    this.props.isLoading && React.createElement(office_ui_fabric_react_1.Spinner, { label: this.props.loadingText }),\r\n                    !this.props.isLoading && (React.createElement(office_ui_fabric_react_1.DetailsList, { selectionMode: office_ui_fabric_react_1.SelectionMode.multiple, items: this.props.items, compact: false, columns: this.state.columns, setKey: \"set\", layoutMode: office_ui_fabric_react_1.DetailsListLayoutMode.justified, isHeaderVisible: true, selection: this._selection, selectionPreservedOnEmptyClick: false, enterModalSelectionOnTouch: false })))),\r\n            this.props.ctxVisible && (React.createElement(office_ui_fabric_react_1.ContextualMenu, { directionalHint: 12, isBeakVisible: true, gapSpace: 10, beakWidth: 20, directionalHintFixed: true, target: this.props.ctxTarget, items: this.state.ctxMenues, onDismiss: this.closeContextualMenue }))));\r\n    }\r\n}\r\nexports.BaseUebersicht = BaseUebersicht;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst Panel_1 = require(\"../../../global/components/simple/Panel\");\r\nconst react_1 = require(\"react\");\r\nconst BaseWeatherSensorChart_1 = require(\"./BaseWeatherSensorChart\");\r\nclass BaseWeatherSensor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { showDetails: false };\r\n        this.sensorDetailsClicked = this.sensorDetailsClicked.bind(this);\r\n    }\r\n    sensorDetailsClicked() {\r\n        this.setState({ showDetails: !this.state.showDetails });\r\n    }\r\n    render() {\r\n        console.log(\"BaseWeatherSensor render\");\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\", key: \"sensor\" + this.props.id },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                React.createElement(Panel_1.Panel, { headerText: this.props.sensorInformations.name, className: \"custom-padding-bottom-10px\", headerControls: React.createElement(\"div\", null,\r\n                        React.createElement(office_ui_fabric_react_1.IconButton, { checked: false, iconProps: {\r\n                                iconName: \"info\"\r\n                            }, title: \"Charts \\u00F6ffnen\", ariaLabel: \"Charts \\u00F6ffnen\", onClick: this.sensorDetailsClicked })) },\r\n                    !this.state.showDetails && (React.createElement(react_1.Fragment, null,\r\n                        React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                                React.createElement(\"h1\", { className: \"ms-font-su ms-fontColor-themePrimary\" }, this.props.sensorInformations.temperature + \" °C\"))),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm6\" },\r\n                                React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" },\r\n                                    this.props.sensorInformations.humidity,\r\n                                    React.createElement(\"i\", { className: \"ms-Icon ms-Icon--Precipitation\", \"aria-hidden\": \"true\" }))),\r\n                            this.props.sensorInformations.hasPressure && (React.createElement(\"div\", { className: \"ms-Grid-col ms-sm6\" },\r\n                                React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, this.props.sensorInformations.pressure)))))),\r\n                    this.state.showDetails && (React.createElement(BaseWeatherSensorChart_1.BaseWeatherSensorChart, { sensorInformations: this.props.sensorInformations }))))));\r\n    }\r\n}\r\nexports.BaseWeatherSensor = BaseWeatherSensor;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst axios_1 = require(\"axios\");\r\nconst react_chartjs_2_1 = require(\"react-chartjs-2\");\r\nconst date_1 = require(\"../../../helper/date\");\r\nconst options = [\r\n    React.createElement(\"option\", { value: \"1\", key: \"k1\" }, \"Heute\"),\r\n    React.createElement(\"option\", { value: \"2\", key: \"k2\" }, \"Letzten 2 Tage\"),\r\n    React.createElement(\"option\", { value: \"3\", key: \"k3\" }, \"Letzte Woche\"),\r\n    React.createElement(\"option\", { value: \"4\", key: \"k4\" }, \"Alle\")\r\n];\r\nclass BaseWeatherSensorChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sensorData: undefined,\r\n            rawSensorData: [],\r\n            isError: false,\r\n            isLoadingSensorData: true,\r\n            selectedRange: \"1\",\r\n            options: undefined\r\n        };\r\n        this.dateRangeSelectionChanged = this.dateRangeSelectionChanged.bind(this);\r\n        this.getTooltipTitle = this.getTooltipTitle.bind(this);\r\n    }\r\n    getChartData(defaultData) {\r\n        let dataRows = defaultData;\r\n        let data = {\r\n            datasets: [],\r\n            labels: []\r\n        };\r\n        data.datasets.push({ label: \"Temperatur\", data: [] });\r\n        data.datasets.push({ label: \"Luftfeuchtigkeit\", data: [] });\r\n        if (this.props.sensorInformations.hasPressure) {\r\n            data.datasets.push({ label: \"Druck\", data: [] });\r\n        }\r\n        let labels = [];\r\n        let tempValues = [];\r\n        let humidityValues = [];\r\n        let pressureValues = [];\r\n        dataRows.forEach(row => {\r\n            if (!row.timestamp)\r\n                return;\r\n            labels.push(row.timestamp);\r\n            if (row.temperature && row.temperature < 100) {\r\n                tempValues.push(row.temperature);\r\n            }\r\n            if (row.humidity && row.humidity >= 0) {\r\n                humidityValues.push(row.humidity);\r\n            }\r\n            if (row.pressure && row.pressure >= 0) {\r\n                pressureValues.push(row.pressure);\r\n            }\r\n        });\r\n        data.labels = labels;\r\n        data.datasets = [\r\n            {\r\n                data: tempValues,\r\n                label: \"Temperatur\",\r\n                backgroundColor: \"rgba(75,0,192,0.4)\",\r\n                borderColor: \"rgba(75,0,192,1)\",\r\n                borderCapStyle: \"butt\",\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"rgba(75,192,192,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                lineTension: 0.3,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 3,\r\n                fill: false\r\n            },\r\n            {\r\n                data: humidityValues,\r\n                label: \"Feuchtigkeit\",\r\n                backgroundColor: \"rgba(75,192,192,0.4)\",\r\n                borderColor: \"rgba(75,192,192,1)\",\r\n                borderCapStyle: \"butt\",\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"rgba(75,192,192,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                lineTension: 0.3,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 3,\r\n                fill: false\r\n            }\r\n        ];\r\n        if (this.props.sensorInformations.hasPressure) {\r\n            data.datasets.push({\r\n                data: pressureValues,\r\n                label: \"Druck\",\r\n                backgroundColor: \"rgba(255,255,0,0.4)\",\r\n                borderColor: \"rgba(255,255,0,1)\",\r\n                borderCapStyle: \"butt\",\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"rgba(75,192,192,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                lineTension: 0.3,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 3,\r\n                fill: false\r\n            });\r\n        }\r\n        return data;\r\n    }\r\n    querySensorDataByDateRange(from, to) {\r\n        return axios_1.default.get(\"/api/sensors/\" +\r\n            this.props.sensorInformations.id +\r\n            \"/between/\" +\r\n            from +\r\n            \"/\" +\r\n            to);\r\n    }\r\n    queryAllSensorData() {\r\n        return axios_1.default.get(\"/api/sensors/\" + this.props.sensorInformations.id + \"/data\");\r\n    }\r\n    getDateTickRangeBySelection(selectedOption) {\r\n        let from = -1;\r\n        let to = -1;\r\n        switch (selectedOption) {\r\n            case \"1\":\r\n                from = date_1.setDatePropertiesToZero(new Date()).getTime();\r\n                to = Date.now();\r\n                break;\r\n            case \"2\":\r\n                from = date_1.addDays(new Date(), -2, true).getTime();\r\n                to = Date.now();\r\n                break;\r\n            case \"3\":\r\n                from = date_1.addDays(new Date(), -7, true).getTime();\r\n                to = Date.now();\r\n                break;\r\n            case \"4\":\r\n                break;\r\n            default:\r\n                console.log(\"getDateTickRangeBySelection\", \"value not found...\", selectedOption);\r\n        }\r\n        return {\r\n            from: from,\r\n            to: to\r\n        };\r\n    }\r\n    queryLiveDate(selectedOption) {\r\n        return new Promise((resolve, reject) => {\r\n            let dateRange = this.getDateTickRangeBySelection(selectedOption);\r\n            this.querySensorDataByDateRange(dateRange.from, dateRange.to)\r\n                .then(dataResult => {\r\n                if (!dataResult.data) {\r\n                    resolve([]);\r\n                }\r\n                if (!dataResult.data.items || dataResult.data.items.lenght === 0) {\r\n                    resolve([]);\r\n                }\r\n                resolve(dataResult.data.items);\r\n            })\r\n                .catch(error => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n    getTooltipTitle(tooltipItem, data) {\r\n        let returnValue = undefined;\r\n        if (this.state.rawSensorData &&\r\n            this.state.rawSensorData.length >= tooltipItem[0].index) {\r\n            let sensorTimeStamp = this.state.rawSensorData[tooltipItem[0].index];\r\n            if (sensorTimeStamp) {\r\n                let timestamp = sensorTimeStamp.timestamp;\r\n                returnValue = date_1.getGermanDateTimeString(new Date(timestamp));\r\n            }\r\n        }\r\n        if (!returnValue) {\r\n            returnValue = data.labels[tooltipItem[0].index];\r\n        }\r\n        return returnValue;\r\n    }\r\n    doSensorQueryNow() {\r\n        this.queryLiveDate(this.state.selectedRange)\r\n            .then(result => {\r\n            let chartData = this.getChartData(result);\r\n            let options = { tooltips: {} };\r\n            options.tooltips.callbacks = {\r\n                title: this.getTooltipTitle\r\n            };\r\n            if (chartData && chartData.labels && chartData.labels.length > 0) {\r\n                chartData.labels = chartData.labels.map(label => {\r\n                    label = date_1.getGermanDateString(new Date(parseFloat(label.toString())));\r\n                    return label;\r\n                });\r\n            }\r\n            this.setState({\r\n                rawSensorData: result,\r\n                options: options,\r\n                sensorData: chartData,\r\n                isLoadingSensorData: false\r\n            });\r\n        })\r\n            .catch(error => {\r\n            this.setState({\r\n                isError: true,\r\n                isLoadingSensorData: false\r\n            });\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.doSensorQueryNow();\r\n    }\r\n    dateRangeSelectionChanged(event) {\r\n        let index = event.target.selectedIndex;\r\n        let selectedOptionValue = event.target.options[index].value;\r\n        this.setState({\r\n            isLoadingSensorData: true,\r\n            selectedRange: selectedOptionValue\r\n        }, () => {\r\n            this.doSensorQueryNow();\r\n        });\r\n    }\r\n    render() {\r\n        console.log(\"BaseWeatherSensorChart render\");\r\n        if (!this.state.sensorData)\r\n            return null;\r\n        if (this.state.isError) {\r\n            return (this.state.isError && (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" }, \"Es ist ein Fehler aufgetreten...\"))));\r\n        }\r\n        let sensorDataContent = null;\r\n        if (this.state.isLoadingSensorData) {\r\n            sensorDataContent = (React.createElement(office_ui_fabric_react_1.Spinner, { size: office_ui_fabric_react_1.SpinnerSize.large, label: \"Lade Sensor-Daten...\" }));\r\n        }\r\n        else {\r\n            if (!this.state.sensorData) {\r\n                sensorDataContent = \"Keine Daten vorhanden...\";\r\n            }\r\n            else {\r\n                sensorDataContent = (React.createElement(react_chartjs_2_1.Line, { data: this.state.sensorData, options: this.state.options, height: 400, width: 400 }));\r\n            }\r\n        }\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                    React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                        React.createElement(office_ui_fabric_react_1.Label, null, \"Zeitraum\"),\r\n                        React.createElement(\"select\", { onChange: this.dateRangeSelectionChanged, value: this.state.selectedRange }, options))),\r\n                React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                    React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" }, sensorDataContent)))));\r\n    }\r\n}\r\nexports.BaseWeatherSensorChart = BaseWeatherSensorChart;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nclass ButtonRow extends React.PureComponent {\r\n    render() {\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-textAlignRight\" },\r\n                React.createElement(office_ui_fabric_react_1.ActionButton, { \"data-automation-id\": \"save\", key: \"save_btn_\" + Date.now(), iconProps: { iconName: \"Save\" }, disabled: this.props.saveButtonProps.disabled, checked: this.props.saveButtonProps.checked, onClick: this.props.saveButtonProps.onClickFunc }, this.props.saveButtonProps.text),\r\n                React.createElement(office_ui_fabric_react_1.ActionButton, { \"data-automation-id\": \"cancel\", key: \"cancel_btn_\" + Date.now(), iconProps: { iconName: \"Cancel\" }, disabled: this.props.cancelButtonProps.disabled, checked: this.props.cancelButtonProps.checked, onClick: this.props.cancelButtonProps.onClickFunc }, this.props.cancelButtonProps.text))));\r\n    }\r\n}\r\nexports.ButtonRow = ButtonRow;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst react_router_dom_1 = require(\"react-router-dom\");\r\nconst Routing_1 = require(\"./Routing\");\r\nclass NotFoundPage extends React.Component {\r\n    render() {\r\n        return (React.createElement(Routing_1.Status, { code: 404 },\r\n            React.createElement(\"div\", { className: \"not-found\" },\r\n                React.createElement(\"h1\", null, \"404\"),\r\n                React.createElement(\"h2\", null, \"Page not found!\"),\r\n                React.createElement(\"p\", null,\r\n                    React.createElement(react_router_dom_1.Link, { to: \"/\", replace: true }, \"Return to Main Page\")))));\r\n    }\r\n}\r\nexports.NotFoundPage = NotFoundPage;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nclass NumberTextField extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.validateNumber = function (value) {\r\n            return isNaN(Number(value))\r\n                ? \"The value should be a number, actual is \" + value + \".\"\r\n                : \"\";\r\n        };\r\n        this.valueChanged = this.valueChanged.bind(this);\r\n    }\r\n    valueChanged(value) {\r\n        let v = value.replace(\",\", \".\");\r\n        let n = parseFloat(v);\r\n        n = isNaN(n) ? 0 : n;\r\n        this.props.onChanged(n);\r\n        if (this.props.numberValueChanged) {\r\n            this.props.numberValueChanged(n);\r\n        }\r\n    }\r\n    render() {\r\n        let v = this.props.numberValue || this.props.value || \"\";\r\n        return (React.createElement(office_ui_fabric_react_1.TextField, { value: v.toString(), placeholder: this.props.placeholder, type: \"number\", prefix: this.props.prefix, suffix: this.props.suffix, required: this.props.required, label: this.props.label, onGetErrorMessage: this.validateNumber, onChanged: this.valueChanged }));\r\n    }\r\n}\r\nexports.NumberTextField = NumberTextField;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst Button_1 = require(\"office-ui-fabric-react/lib/Button\");\r\nclass Panel extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isContentVisible: !this.props.isCollapsed\r\n        };\r\n        this.linkClicked = this.linkClicked.bind(this);\r\n    }\r\n    linkClicked(e) {\r\n        if (this.props.canToggleContentHidden === false) {\r\n            return false;\r\n        }\r\n        e.preventDefault();\r\n        let newState = Object.assign({}, this.state);\r\n        newState.isContentVisible = !newState.isContentVisible;\r\n        this.setState(newState);\r\n        return false;\r\n    }\r\n    render() {\r\n        let panelClass = this.props.className || \"\";\r\n        let contentClass = this.props.contentClass;\r\n        return (React.createElement(\"div\", { className: panelClass },\r\n            React.createElement(\"div\", { className: \"custom-border-settings ms-borderColor-neutralLighter\" },\r\n                React.createElement(\"div\", { className: \"ms-bgColor-neutralLighter custom-panel-header\" },\r\n                    React.createElement(Button_1.IconButton, { disabled: false, style: { width: \"40px\", height: \"36px\" }, checked: false, iconProps: {\r\n                            iconName: this.props.canToggleContentHidden\r\n                                ? this.state.isContentVisible ? \"ChevronUp\" : \"ChevronDownMed\"\r\n                                : \"blank\"\r\n                        }, title: \"Emoji\", ariaLabel: \"Emoji\", onClick: this.linkClicked }),\r\n                    React.createElement(\"div\", { onClick: this.linkClicked, style: {\r\n                            cursor: \"pointer\",\r\n                            width: this.props.headerControls ? \"75%\" : \"100%\"\r\n                        } },\r\n                        React.createElement(\"span\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, this.props.headerText)),\r\n                    this.props.headerControls && this.props.headerControls),\r\n                this.state.isContentVisible && (React.createElement(\"div\", { className: contentClass }, this.props.children)))));\r\n    }\r\n}\r\nPanel.defaultProps = {\r\n    headerText: \"Kein Text\",\r\n    className: \"\",\r\n    contentClass: \"default-panel-content-container\",\r\n    isCollapsed: false,\r\n    canToggleContentHidden: true,\r\n    headerControls: null\r\n};\r\nexports.Panel = Panel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst react_router_dom_1 = require(\"react-router-dom\");\r\nclass RedirectWithStatus extends React.Component {\r\n    render() {\r\n        return (React.createElement(react_router_dom_1.Route, { render: ({ staticContext }) => {\r\n                if (staticContext) {\r\n                    staticContext.statusCode = this.props.status;\r\n                }\r\n                return React.createElement(react_router_dom_1.Redirect, { from: this.props.from, to: this.props.to });\r\n            } }));\r\n    }\r\n}\r\nexports.RedirectWithStatus = RedirectWithStatus;\r\nclass Status extends React.Component {\r\n    render() {\r\n        return (React.createElement(react_router_dom_1.Route, { render: ({ staticContext }) => {\r\n                if (staticContext) {\r\n                    staticContext.statusCode = this.props.code;\r\n                }\r\n                return this.props.children;\r\n            } }));\r\n    }\r\n}\r\nexports.Status = Status;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nclass ToolTip extends React.PureComponent {\r\n    render() {\r\n        return (React.createElement(\"div\", { style: { minWidth: \"150px\" } },\r\n            React.createElement(\"div\", { className: \"ms-CalloutExample-header\", style: { padding: \"18px 24px 12px\" } },\r\n                React.createElement(\"span\", { className: \"ms-fontColor-themePrimary ms-fontWeight-semibold ms-font-l ms-fontSize-l\" }, this.props.Title)),\r\n            React.createElement(\"div\", { className: \"ms-CalloutExample-inner\", style: { height: \"100%\", padding: \"0 24px 20px\" } },\r\n                React.createElement(\"div\", { className: \"ms-font-l ms-fontSize-m\" },\r\n                    React.createElement(\"p\", { className: \"ms-CalloutExample-subText\" }, this.props.Description)))));\r\n    }\r\n}\r\nexports.ToolTip = ToolTip;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction getGermanDateString(date) {\r\n    if (!date) {\r\n        return \"\";\r\n    }\r\n    return date.toLocaleString(\"de-DE\", {\r\n        year: \"numeric\",\r\n        month: \"2-digit\",\r\n        day: \"2-digit\"\r\n    });\r\n}\r\nexports.getGermanDateString = getGermanDateString;\r\nfunction getGermanDateTimeString(date) {\r\n    if (!date) {\r\n        return \"\";\r\n    }\r\n    return date.toLocaleString(\"de-DE\", {\r\n        year: \"numeric\",\r\n        month: \"2-digit\",\r\n        day: \"2-digit\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\"\r\n    });\r\n}\r\nexports.getGermanDateTimeString = getGermanDateTimeString;\r\nfunction addDays(dateToAdd, daysToAdd, setHrsMinSecMiSecToZero = false) {\r\n    let calculatedDate = new Date(dateToAdd);\r\n    calculatedDate.setDate(calculatedDate.getDate() + daysToAdd);\r\n    if (setHrsMinSecMiSecToZero) {\r\n        calculatedDate = setDatePropertiesToZero(calculatedDate);\r\n    }\r\n    return calculatedDate;\r\n}\r\nexports.addDays = addDays;\r\nfunction setDatePropertiesToZero(dateToSet) {\r\n    let calculatedDate = new Date(dateToSet);\r\n    calculatedDate.setMinutes(0);\r\n    calculatedDate.setHours(0);\r\n    calculatedDate.setSeconds(0);\r\n    calculatedDate.setMilliseconds(0);\r\n    return calculatedDate;\r\n}\r\nexports.setDatePropertiesToZero = setDatePropertiesToZero;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction promise_all_custom(promises) {\r\n    return new Promise((resolve, reject) => {\r\n        let messages = [];\r\n        if (!promises || promises.length === 0) {\r\n            resolve(messages);\r\n            return;\r\n        }\r\n        let count = 0;\r\n        promises.forEach((promise, index) => {\r\n            messages[index] = undefined;\r\n            promise\r\n                .then(data => {\r\n                messages[index] = { isError: false, data: data };\r\n                count++;\r\n                if (count === promises.length) {\r\n                    resolve(messages);\r\n                    return;\r\n                }\r\n            })\r\n                .catch(e => {\r\n                messages[index] = { isError: true, data: e };\r\n                count++;\r\n                if (count === promises.length) {\r\n                    resolve(messages);\r\n                    return;\r\n                }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.promise_all_custom = promise_all_custom;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction sortElement(elementOne, elementTwo, propertyName, descending = false) {\r\n    let r = 0;\r\n    if (!elementOne.hasOwnProperty(propertyName) ||\r\n        !elementTwo.hasOwnProperty(propertyName)) {\r\n    }\r\n    else if (elementOne[propertyName] < elementTwo[propertyName]) {\r\n        r = 1;\r\n    }\r\n    else if (elementOne[propertyName] > elementTwo[propertyName]) {\r\n        r = -1;\r\n    }\r\n    else {\r\n        r = 0;\r\n    }\r\n    return descending ? r * -1 : r;\r\n}\r\nexports.sortElement = sortElement;\r\nfunction sortArrayByProperty(arrayOfElements, propertyName, descending = false) {\r\n    return arrayOfElements.sort((a, b) => {\r\n        return sortElement(a, b, propertyName, descending);\r\n    });\r\n}\r\nexports.sortArrayByProperty = sortArrayByProperty;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst axios_1 = require(\"axios\");\r\nconst enums_1 = require(\"../../../../enums/enums\");\r\nconst Filiale_1 = require(\"../stateless/Filiale\");\r\nconst promise_1 = require(\"../../../../helper/promise\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst react_1 = require(\"react\");\r\nconst ButtonRow_1 = require(\"../../../../global/components/simple/ButtonRow\");\r\nclass Filiale extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dbEntry: undefined,\r\n            routes: [],\r\n            viewModel: undefined,\r\n            loadingState: {\r\n                isLoading: true,\r\n                isError: false,\r\n                error: { message: \"\", stacktrace: \"\" }\r\n            },\r\n            availableRouteDates: []\r\n        };\r\n        this.onAusgabenChanged = this.onAusgabenChanged.bind(this);\r\n        this.onDeleteClick = this.onDeleteClick.bind(this);\r\n        this.onEinnahmenChanged = this.onEinnahmenChanged.bind(this);\r\n        this.onFahrdatumChanged = this.onFahrdatumChanged.bind(this);\r\n        this.onOrtChanged = this.onOrtChanged.bind(this);\r\n        this.onPkzChanged = this.onPkzChanged.bind(this);\r\n        this.onPlzChanged = this.onPlzChanged.bind(this);\r\n        this.onStrasseChanged = this.onStrasseChanged.bind(this);\r\n        this.onTestnummerChanged = this.onTestnummerChanged.bind(this);\r\n        this.saveClicked = this.saveClicked.bind(this);\r\n        this.cancelClicked = this.cancelClicked.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        let promises = [axios_1.default.get(\"api/routen\")];\r\n        if (this.props.pageType !== enums_1.PageType.Add) {\r\n            promises.push(axios_1.default.get(\"api/filialen/\" + this.props.filialeId));\r\n        }\r\n        promise_1.promise_all_custom(promises)\r\n            .then(data => {\r\n            if (data[0].isError) {\r\n                alert(\"Fehler beim Abfragen der Daten...\");\r\n                return;\r\n            }\r\n            if (this.props.pageType !== enums_1.PageType.Add) {\r\n                if (data[1].isError) {\r\n                    alert(\"Fehler beim Abfragen der Daten...\");\r\n                    return;\r\n                }\r\n            }\r\n            let routes = data[0].data.data || [];\r\n            if (!routes || routes.length === 0) {\r\n                let ns = Object.assign({}, this.state);\r\n                ns.loadingState = {\r\n                    isLoading: false,\r\n                    isError: true,\r\n                    error: { message: \"Keine Routen gefunden...\", stacktrace: \"\" }\r\n                };\r\n                this.setState(ns);\r\n                return;\r\n            }\r\n            routes = routes.sort((a, b) => {\r\n                return a.route_timestamp > b.route_timestamp\r\n                    ? 1\r\n                    : a.route_timestamp < b.route_timestamp ? -1 : 0;\r\n            });\r\n            let dates = routes.map(route => {\r\n                return new Date(route.route_timestamp);\r\n            });\r\n            let filiale = undefined;\r\n            if (this.props.pageType === enums_1.PageType.Add) {\r\n                filiale = {\r\n                    _id: undefined,\r\n                    ausgaben: 0,\r\n                    created: Date.now(),\r\n                    einnahmen: 0,\r\n                    modified: Date.now(),\r\n                    ort: \"\",\r\n                    pkz: 0,\r\n                    plz: 0,\r\n                    strasse: \"\",\r\n                    route_id: \"\",\r\n                    testnummer: 0,\r\n                    timestamp: Date.now()\r\n                };\r\n                if (routes.length > 0) {\r\n                    filiale.route_id = routes[0]._id;\r\n                }\r\n            }\r\n            else {\r\n                filiale = data[1].data.data.filiale || undefined;\r\n            }\r\n            if (!filiale) {\r\n                let ns = Object.assign({}, this.state);\r\n                ns.loadingState = {\r\n                    isLoading: false,\r\n                    isError: true,\r\n                    error: { message: \"Keine Filiale gefunden...\", stacktrace: \"\" }\r\n                };\r\n                this.setState(ns);\r\n                return;\r\n            }\r\n            let vm = {\r\n                _id: filiale._id,\r\n                ausgaben: filiale.ausgaben,\r\n                einnahmen: filiale.einnahmen,\r\n                index: 1,\r\n                ort: filiale.ort,\r\n                pkz: filiale.pkz,\r\n                timestamp: filiale.timestamp,\r\n                testnummer: filiale.testnummer,\r\n                strasse: filiale.strasse,\r\n                plz: filiale.plz,\r\n                fahrdatum: null\r\n            };\r\n            routes.forEach(route => {\r\n                if (filiale.route_id === route._id) {\r\n                    vm.fahrdatum = route.route_timestamp;\r\n                }\r\n            });\r\n            this.setState({\r\n                loadingState: {\r\n                    isLoading: false,\r\n                    isError: false,\r\n                    error: { message: \"\", stacktrace: \"\" }\r\n                },\r\n                availableRouteDates: dates,\r\n                routes: routes,\r\n                dbEntry: filiale,\r\n                viewModel: vm\r\n            });\r\n        })\r\n            .catch(() => {\r\n            alert(\"Fehler beim Laden\");\r\n        });\r\n    }\r\n    cancelClicked() {\r\n        this.props.cancel_clicked();\r\n    }\r\n    saveClicked() {\r\n        let routeId = \"\";\r\n        this.state.routes.forEach(route => {\r\n            if (route.route_timestamp === this.state.viewModel.fahrdatum) {\r\n                routeId = route._id;\r\n            }\r\n        });\r\n        let data = {\r\n            _id: this.state.viewModel._id,\r\n            ausgaben: this.state.viewModel.ausgaben,\r\n            einnahmen: this.state.viewModel.einnahmen,\r\n            ort: this.state.viewModel.ort,\r\n            pkz: this.state.viewModel.pkz,\r\n            plz: this.state.viewModel.plz,\r\n            strasse: this.state.viewModel.strasse,\r\n            testnummer: this.state.viewModel.testnummer,\r\n            timestamp: this.state.viewModel.timestamp,\r\n            route_id: routeId\r\n        };\r\n        if (this.props.pageType === enums_1.PageType.Edit) {\r\n            axios_1.default.put(\"/api/filialen/\" + this.state.dbEntry._id, { filiale: data })\r\n                .then(response => {\r\n                this.props.ok_clicked();\r\n                return null;\r\n            })\r\n                .catch(e => {\r\n                console.log(\"Fehler\", JSON.stringify(e));\r\n                alert(\"Fehler saveClicked\");\r\n            });\r\n        }\r\n        if (this.props.pageType === enums_1.PageType.Add) {\r\n            axios_1.default.post(\"/api/filialen\", { filiale: data })\r\n                .then(response => {\r\n                this.props.ok_clicked();\r\n                return null;\r\n            })\r\n                .catch(e => {\r\n                console.log(\"Fehler\", JSON.stringify(e));\r\n                alert(\"Fehler saveClicked\");\r\n            });\r\n        }\r\n        else {\r\n            this.props.ok_clicked();\r\n            return null;\r\n        }\r\n    }\r\n    onDeleteClick(id) {\r\n        alert(\"Löschen nicht erlaubt\");\r\n    }\r\n    onFahrdatumChanged(id, value) {\r\n        let vm = Object.assign({}, this.state);\r\n        vm.viewModel.fahrdatum = value;\r\n        this.setState(vm);\r\n    }\r\n    onPkzChanged(id, value) {\r\n        let vm = Object.assign({}, this.state);\r\n        vm.viewModel.pkz = value;\r\n        this.setState(vm);\r\n    }\r\n    onTestnummerChanged(id, value) {\r\n        let vm = Object.assign({}, this.state);\r\n        vm.viewModel.testnummer = value;\r\n        this.setState(vm);\r\n    }\r\n    onAusgabenChanged(id, value) {\r\n        let vm = Object.assign({}, this.state);\r\n        vm.viewModel.ausgaben = value;\r\n        this.setState(vm);\r\n    }\r\n    onEinnahmenChanged(id, value) {\r\n        let vm = Object.assign({}, this.state);\r\n        vm.viewModel.einnahmen = value;\r\n        this.setState(vm);\r\n    }\r\n    onOrtChanged(id, value) {\r\n        let vm = Object.assign({}, this.state);\r\n        vm.viewModel.ort = value;\r\n        this.setState(vm);\r\n    }\r\n    onStrasseChanged(id, value) {\r\n        let vm = Object.assign({}, this.state);\r\n        vm.viewModel.strasse = value;\r\n        this.setState(vm);\r\n    }\r\n    onPlzChanged(id, value) {\r\n        let vm = Object.assign({}, this.state);\r\n        vm.viewModel.plz = value;\r\n        this.setState(vm);\r\n    }\r\n    render() {\r\n        console.log(\"render Filiale\");\r\n        if (this.state.loadingState.isLoading) {\r\n            return React.createElement(office_ui_fabric_react_1.Spinner, { label: \"Lade Filiale...\", size: office_ui_fabric_react_1.SpinnerSize.large });\r\n        }\r\n        if (this.state.loadingState.isError) {\r\n            return (React.createElement(\"h1\", null, \"Es ist ein Fehler beim Laden aufgetreten... (Message: \" +\r\n                this.state.loadingState.error.message +\r\n                \")\"));\r\n        }\r\n        return (React.createElement(react_1.Fragment, null,\r\n            React.createElement(Filiale_1.Filiale, { filiale: this.state.viewModel, id: this.state.dbEntry._id, key: \"_1\", fahrdaten: this.state.availableRouteDates, title: this.props.headerText, onAusgabenChanged: this.onAusgabenChanged, onDeleteClick: this.onDeleteClick, onEinnahmenChanged: this.onEinnahmenChanged, onFahrdatumChanged: this.onFahrdatumChanged, onOrtChanged: this.onOrtChanged, onPkzChanged: this.onPkzChanged, onPlzChanged: this.onPlzChanged, onStrasseChanged: this.onStrasseChanged, onTestnummerChanged: this.onTestnummerChanged, enableDeleteBtn: false }),\r\n            React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                    React.createElement(ButtonRow_1.ButtonRow, { saveButtonProps: {\r\n                            text: \"Speichern\",\r\n                            disabled: false,\r\n                            checked: false,\r\n                            onClickFunc: this.saveClicked\r\n                        }, cancelButtonProps: {\r\n                            text: \"Abbrechen\",\r\n                            disabled: false,\r\n                            checked: false,\r\n                            onClickFunc: this.cancelClicked\r\n                        } })))));\r\n    }\r\n}\r\nexports.Filiale = Filiale;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst axios_1 = require(\"axios\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst columns_1 = require(\"../../configuration/columns\");\r\nconst BaseUebersicht_1 = require(\"../../../../global/components/simple/BaseUebersicht\");\r\nconst sorting_1 = require(\"../../../../helper/sorting\");\r\nconst promise_1 = require(\"../../../../helper/promise\");\r\nclass Filialuebersicht extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectionHasChanged = this.selectionHasChanged.bind(this);\r\n        this.deleteAllFilialenClicked = this.deleteAllFilialenClicked.bind(this);\r\n        this.deleteFilialeClicked = this.deleteFilialeClicked.bind(this);\r\n        this.sortItems = this.sortItems.bind(this);\r\n        this.deleteFiliale = this.deleteFiliale.bind(this);\r\n        this.deleteFilialen = this.deleteFilialen.bind(this);\r\n        this.editFiliale = this.editFiliale.bind(this);\r\n        this.onCtxMenueVisible = this.onCtxMenueVisible.bind(this);\r\n        this.renderContext = this.renderContext.bind(this);\r\n        this.showMoreClicked = this.showMoreClicked.bind(this);\r\n        let commardbarItems = [].concat(this.props.commandbarItems);\r\n        if (!commardbarItems) {\r\n            commardbarItems = [];\r\n        }\r\n        commardbarItems.push({\r\n            key: \"delete\",\r\n            name: \"Delete Selected\",\r\n            icon: \"delete\",\r\n            disabled: true,\r\n            onClick: this.deleteAllFilialenClicked\r\n        });\r\n        let cols = columns_1.filialOverviewColumns.map(col => {\r\n            if (col.fieldName === \"ctx\") {\r\n                col.onRender = this.renderContext;\r\n            }\r\n            return col;\r\n        });\r\n        this.state = {\r\n            isLoading: true,\r\n            columns: cols,\r\n            items: [],\r\n            rawItems: [],\r\n            selectedItems: [],\r\n            commandbarItems: commardbarItems,\r\n            ctxTarget: undefined,\r\n            isCtxVisible: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.loadFilialen()\r\n            .then((data) => {\r\n            this.setState({\r\n                rawItems: data.rawItems,\r\n                items: data.transformedItems,\r\n                isLoading: false\r\n            });\r\n            return null;\r\n        })\r\n            .catch(error => {\r\n            alert(\"Fehler loadFilialen\");\r\n        });\r\n    }\r\n    renderContext() {\r\n        return (React.createElement(\"div\", { className: \"ms-font-xl ms-fontColor-themePrimary\" },\r\n            React.createElement(office_ui_fabric_react_1.IconButton, { checked: false, iconProps: { iconName: \"More\" }, title: \"More\", ariaLabel: \"More\", onClick: this.showMoreClicked })));\r\n    }\r\n    showMoreClicked(event) {\r\n        this.setState({\r\n            isCtxVisible: true,\r\n            ctxTarget: event.target\r\n        });\r\n    }\r\n    selectionHasChanged(selectedItems) {\r\n        let newState = Object.assign({}, this.state);\r\n        newState.selectedItems = selectedItems;\r\n        newState.commandbarItems.forEach(item => {\r\n            if (item.key === \"delete\") {\r\n                item.disabled = !selectedItems || selectedItems.length < 1;\r\n            }\r\n        });\r\n        this.setState(newState);\r\n    }\r\n    getFilialViewModelByRouteModel(items) {\r\n        return items.map((item, index) => {\r\n            return {\r\n                index: index + 1,\r\n                _id: item._id,\r\n                created: item.created,\r\n                einnahmen: item.einnahmen,\r\n                ausgaben: item.ausgaben,\r\n                modified: item.modified,\r\n                timestamp: item.timestamp,\r\n                fahrdatum: -1,\r\n                ort: item.ort,\r\n                pkz: item.pkz,\r\n                plz: item.plz,\r\n                strasse: item.strasse,\r\n                testnummer: item.testnummer\r\n            };\r\n        });\r\n    }\r\n    loadFilialen() {\r\n        return new Promise((resolve, reject) => {\r\n            this.loadFilialenRequest()\r\n                .then((data) => {\r\n                let items = this.getFilialViewModelByRouteModel(data);\r\n                resolve({\r\n                    rawItems: data || [],\r\n                    transformedItems: items || []\r\n                });\r\n            })\r\n                .catch(() => {\r\n                alert(\"Fehler beim Laden der Filialen\");\r\n            });\r\n        });\r\n    }\r\n    deleteFilialen(filialElements) {\r\n        return new Promise((resolve, reject) => {\r\n            let promises = [];\r\n            filialElements.forEach(filiale => {\r\n                promises.push(this.deleteFilialeElementRequest(filiale));\r\n            });\r\n            promise_1.promise_all_custom(promises)\r\n                .then(() => {\r\n                resolve();\r\n            })\r\n                .catch(() => {\r\n                alert(\"Grober Fehler!\");\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n    loadFilialenRequest() {\r\n        return new Promise((resolve, reject) => {\r\n            axios_1.default.get(\"/api/filialen\")\r\n                .then(results => {\r\n                resolve(results.data);\r\n            })\r\n                .catch(() => {\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n    deleteFilialeElementRequest(route) {\r\n        return axios_1.default.delete(\"/api/filialen/\" + route._id);\r\n    }\r\n    deleteFiliale(selectedItems) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!selectedItems ||\r\n                selectedItems.length === 0 ||\r\n                selectedItems.length > 1) {\r\n                resolve();\r\n                return null;\r\n            }\r\n            return this.deleteFilialen(selectedItems)\r\n                .then(() => {\r\n                return this.loadFilialen();\r\n            })\r\n                .then((data) => {\r\n                this.setState({\r\n                    rawItems: data.rawItems,\r\n                    items: data.transformedItems,\r\n                    isLoading: false\r\n                }, () => {\r\n                    resolve();\r\n                    return null;\r\n                });\r\n            })\r\n                .catch(error => {\r\n                alert(\"Fehler deleteFiliale\");\r\n                reject();\r\n                return null;\r\n            });\r\n        });\r\n    }\r\n    editFiliale(selectedFiliale) {\r\n        if (selectedFiliale) {\r\n            this.props.onEditFilialeClick(selectedFiliale);\r\n        }\r\n    }\r\n    sortItems(propertyName, descending) {\r\n        return sorting_1.sortArrayByProperty(this.state.items, propertyName, descending);\r\n    }\r\n    deleteFilialeClicked(selectedItems) {\r\n        return this.deleteFiliale(selectedItems);\r\n    }\r\n    deleteAllFilialenClicked() {\r\n        return this.setState({ isLoading: true }, () => {\r\n            this.deleteFilialen(this.state.selectedItems).then(() => {\r\n                this.loadFilialen()\r\n                    .then((data) => {\r\n                    this.setState({\r\n                        rawItems: data.rawItems,\r\n                        items: data.transformedItems,\r\n                        isLoading: false\r\n                    });\r\n                    return null;\r\n                })\r\n                    .catch(error => {\r\n                    alert(\"Fehler loadFilialen\");\r\n                });\r\n            });\r\n        });\r\n    }\r\n    onCtxMenueVisible(isVisible) {\r\n        if (this.state.isCtxVisible === isVisible) {\r\n            return;\r\n        }\r\n        let ns = Object.assign({}, this.state);\r\n        ns.isCtxVisible = isVisible;\r\n        if (isVisible === false) {\r\n            ns.ctxTarget = null;\r\n        }\r\n        this.setState(ns);\r\n    }\r\n    render() {\r\n        console.log(\"render Filialuebersicht\");\r\n        return (React.createElement(BaseUebersicht_1.BaseUebersicht, { key: \"fu\", onCtxMenueVisible: this.onCtxMenueVisible, ctxVisible: this.state.isCtxVisible, ctxTarget: this.state.ctxTarget, onDeleteItemClicked: this.deleteFilialeClicked, columns: this.state.columns, items: this.state.items, onEditItemClick: this.editFiliale, onItemSelectionChanged: this.selectionHasChanged, sortByPropertyName: this.sortItems, isLoading: this.state.isLoading, loadingText: \"Filialen werden geladen\", useCommandbar: true, enableSearchBox: false, commandbarItems: this.state.commandbarItems }));\r\n    }\r\n}\r\nexports.Filialuebersicht = Filialuebersicht;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst axios_1 = require(\"axios\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst columns_1 = require(\"../../configuration/columns\");\r\nconst BaseUebersicht_1 = require(\"../../../../global/components/simple/BaseUebersicht\");\r\nconst promise_1 = require(\"../../../../helper/promise\");\r\nconst sorting_1 = require(\"../../../../helper/sorting\");\r\nclass Routenuebersicht extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectionHasChanged = this.selectionHasChanged.bind(this);\r\n        this.deleteAllRoutenClicked = this.deleteAllRoutenClicked.bind(this);\r\n        this.deleteRouteClicked = this.deleteRouteClicked.bind(this);\r\n        this.sortItems = this.sortItems.bind(this);\r\n        this.deleteRoute = this.deleteRoute.bind(this);\r\n        this.deleteRouten = this.deleteRouten.bind(this);\r\n        this.editRoute = this.editRoute.bind(this);\r\n        this.onCtxMenueVisible = this.onCtxMenueVisible.bind(this);\r\n        this.renderContext = this.renderContext.bind(this);\r\n        this.showMoreClicked = this.showMoreClicked.bind(this);\r\n        let commardbarItems = [].concat(this.props.commandbarItems);\r\n        if (!commardbarItems) {\r\n            commardbarItems = [];\r\n        }\r\n        commardbarItems.push({\r\n            key: \"delete\",\r\n            name: \"Delete Selected\",\r\n            icon: \"delete\",\r\n            disabled: true,\r\n            onClick: this.deleteAllRoutenClicked\r\n        });\r\n        let cols = columns_1.routeOverviewColumns.map(col => {\r\n            if (col.fieldName === \"ctx\") {\r\n                col.onRender = this.renderContext;\r\n            }\r\n            return col;\r\n        });\r\n        this.state = {\r\n            isLoading: true,\r\n            columns: cols,\r\n            items: [],\r\n            rawItems: [],\r\n            selectedItems: [],\r\n            commandbarItems: commardbarItems,\r\n            ctxTarget: undefined,\r\n            isCtxVisible: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.loadRouten()\r\n            .then((data) => {\r\n            this.setState({\r\n                rawItems: data.rawItems,\r\n                items: data.transformedItems,\r\n                isLoading: false\r\n            });\r\n            return null;\r\n        })\r\n            .catch(error => {\r\n            alert(\"Fehler loadRouten\");\r\n        });\r\n    }\r\n    renderContext() {\r\n        return (React.createElement(\"div\", { className: \"ms-font-xl ms-fontColor-themePrimary\" },\r\n            React.createElement(office_ui_fabric_react_1.IconButton, { checked: false, iconProps: { iconName: \"More\" }, title: \"More\", ariaLabel: \"More\", onClick: this.showMoreClicked })));\r\n    }\r\n    showMoreClicked(event) {\r\n        this.setState({\r\n            isCtxVisible: true,\r\n            ctxTarget: event.target\r\n        });\r\n    }\r\n    onCtxMenueVisible(isVisible) {\r\n        if (this.state.isCtxVisible === isVisible) {\r\n            return;\r\n        }\r\n        let ns = Object.assign({}, this.state);\r\n        ns.isCtxVisible = isVisible;\r\n        if (isVisible === false) {\r\n            ns.ctxTarget = null;\r\n        }\r\n        this.setState(ns);\r\n    }\r\n    selectionHasChanged(selectedItems) {\r\n        let newState = Object.assign({}, this.state);\r\n        newState.selectedItems = selectedItems;\r\n        newState.commandbarItems.forEach(item => {\r\n            if (item.key === \"delete\") {\r\n                item.disabled = !selectedItems || selectedItems.length < 1;\r\n            }\r\n        });\r\n        this.setState(newState);\r\n    }\r\n    getRouteViewModelByRouteModel(items) {\r\n        return items.map((item, index) => {\r\n            return {\r\n                index: index + 1,\r\n                _id: item._id,\r\n                created: item.created,\r\n                modified: item.modified,\r\n                timestamp: item.timestamp,\r\n                links: item.links,\r\n                route_timestamp: item.route_timestamp,\r\n                ausgaben: item.ausgaben\r\n            };\r\n        });\r\n    }\r\n    loadRouten() {\r\n        return new Promise((resolve, reject) => {\r\n            this.loadRoutenRequest()\r\n                .then((data) => {\r\n                let items = this.getRouteViewModelByRouteModel(data);\r\n                resolve({\r\n                    rawItems: data || [],\r\n                    transformedItems: items || []\r\n                });\r\n            })\r\n                .catch(() => {\r\n                alert(\"Fehler beim Laden der Routen\");\r\n            });\r\n        });\r\n    }\r\n    deleteRouten(routenElements) {\r\n        return new Promise((resolve, reject) => {\r\n            let promises = [];\r\n            routenElements.forEach(route => {\r\n                promises.push(this.deleteRouteElementRequest(route));\r\n            });\r\n            promise_1.promise_all_custom(promises)\r\n                .then(() => {\r\n                resolve();\r\n            })\r\n                .catch(() => {\r\n                alert(\"Grober Fehler deleteRouten!\");\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n    loadRoutenRequest() {\r\n        return new Promise((resolve, reject) => {\r\n            axios_1.default.get(\"/api/routen\")\r\n                .then(results => {\r\n                resolve(results.data);\r\n            })\r\n                .catch(() => {\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n    deleteRouteElementRequest(route) {\r\n        return axios_1.default.delete(\"/api/routen/\" + route._id);\r\n    }\r\n    deleteRoute(selectedItems) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!selectedItems ||\r\n                selectedItems.length === 0 ||\r\n                selectedItems.length > 1) {\r\n                resolve();\r\n                return null;\r\n            }\r\n            return this.deleteRouten(selectedItems)\r\n                .then(() => {\r\n                return this.loadRouten();\r\n            })\r\n                .then((data) => {\r\n                this.setState({\r\n                    rawItems: data.rawItems,\r\n                    items: data.transformedItems,\r\n                    isLoading: false\r\n                }, () => {\r\n                    resolve();\r\n                    return null;\r\n                });\r\n            })\r\n                .catch(error => {\r\n                alert(\"Fehler deleteRoute\");\r\n                reject();\r\n                return null;\r\n            });\r\n        });\r\n    }\r\n    editRoute(selectedRoute) {\r\n        if (selectedRoute) {\r\n            this.props.onEditRouteClick(selectedRoute);\r\n        }\r\n    }\r\n    sortItems(propertyName, descending) {\r\n        return sorting_1.sortArrayByProperty(this.state.items, propertyName, descending);\r\n    }\r\n    deleteRouteClicked(selectedItems) {\r\n        return this.deleteRoute(selectedItems);\r\n    }\r\n    deleteAllRoutenClicked() {\r\n        return this.setState({ isLoading: true }, () => {\r\n            this.deleteRouten(this.state.selectedItems)\r\n                .then(() => {\r\n                this.loadRouten().then((data) => {\r\n                    this.setState({\r\n                        rawItems: data.rawItems,\r\n                        items: data.transformedItems,\r\n                        isLoading: false\r\n                    });\r\n                    return null;\r\n                });\r\n            })\r\n                .catch(error => {\r\n                alert(\"Fehler deleteAllRoutenClicked\");\r\n            });\r\n        });\r\n    }\r\n    render() {\r\n        console.log(\"render Routenuebersicht\");\r\n        return (React.createElement(BaseUebersicht_1.BaseUebersicht, { key: \"ru\", ctxTarget: this.state.ctxTarget, ctxVisible: this.state.isCtxVisible, onCtxMenueVisible: this.onCtxMenueVisible, onDeleteItemClicked: this.deleteRouteClicked, columns: this.state.columns, items: this.state.items, onEditItemClick: this.editRoute, onItemSelectionChanged: this.selectionHasChanged, sortByPropertyName: this.sortItems, isLoading: this.state.isLoading, loadingText: \"Routen werden geladen\", useCommandbar: true, enableSearchBox: false, commandbarItems: this.state.commandbarItems }));\r\n    }\r\n}\r\nexports.Routenuebersicht = Routenuebersicht;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst axios_1 = require(\"axios\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst react_1 = require(\"react\");\r\nconst ButtonRow_1 = require(\"../../../../global/components/simple/ButtonRow\");\r\nconst date_1 = require(\"../../../../helper/date\");\r\nconst promise_1 = require(\"../../../../helper/promise\");\r\nclass UploadFilialen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textareaElement = undefined;\r\n        this.selectRouteElement = undefined;\r\n        this.cancelBtnClick = this.cancelBtnClick.bind(this);\r\n        this.uploadClick = this.uploadClick.bind(this);\r\n        this.setTextareaElement = this.setTextareaElement.bind(this);\r\n        this.setSelectRouteElement = this.setSelectRouteElement.bind(this);\r\n        this.state = {\r\n            routes: [],\r\n            isInitialized: false,\r\n            isError: false,\r\n            isUploading: false\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.loadRoutenRequest()\r\n            .then((result) => {\r\n            this.setState({ routes: result, isInitialized: true });\r\n        })\r\n            .catch(e => {\r\n            alert(\"Routen konnten nicht geladen werden...\");\r\n            this.setState({ isError: true });\r\n        });\r\n    }\r\n    loadRoutenRequest() {\r\n        return new Promise((resolve, reject) => {\r\n            axios_1.default.get(\"/api/routen\")\r\n                .then(results => {\r\n                resolve(results.data);\r\n            })\r\n                .catch(() => {\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n    saveFilialen(filialen) {\r\n        let filialPromises = filialen.map((filiale, index) => {\r\n            return axios_1.default.post(\"/api/filialen\", {\r\n                filiale\r\n            });\r\n        });\r\n        return promise_1.promise_all_custom(filialPromises);\r\n    }\r\n    parseNumber(value) {\r\n        value = value.replace(/,/g, \".\");\r\n        value = value.replace(/[^-0-9.]/g, \"\");\r\n        let returnValue = parseFloat(value);\r\n        if (isNaN(returnValue)) {\r\n            return -1;\r\n        }\r\n        return returnValue;\r\n    }\r\n    createFilialen(value) {\r\n        let ret = {\r\n            import: [],\r\n            importCount: 0,\r\n            skipCount: 0,\r\n            messages: []\r\n        };\r\n        if (!value) {\r\n            ret.messages.push(\"Kein Initialwert übergeben\");\r\n            return ret;\r\n        }\r\n        let filialen = value.split(\"\\n\");\r\n        if (!filialen || filialen.length === 0) {\r\n            ret.messages.push(\"Es konnten keine Filialen ausgelesen werden\");\r\n            return ret;\r\n        }\r\n        let selectedRoute = \"\";\r\n        if (this.selectRouteElement && this.selectRouteElement.options.length > 0) {\r\n            selectedRoute = this.selectRouteElement.options[this.selectRouteElement.selectedIndex].value;\r\n        }\r\n        filialen.forEach(filiale => {\r\n            let rows = filiale.split(\"\\t\");\r\n            if (!rows || rows.length < 7) {\r\n                ret.messages.push(\"Es konnten keine Filial-Eigenschaften ausgelesen werden. [Wert: \" +\r\n                    filiale +\r\n                    \"]\");\r\n                ret.skipCount += 1;\r\n                return;\r\n            }\r\n            let model = {\r\n                timestamp: Date.now(),\r\n                ausgaben: this.parseNumber(rows[0].trim()),\r\n                einnahmen: this.parseNumber(rows[1].trim()),\r\n                plz: this.parseNumber(rows[2].trim()),\r\n                ort: rows[3].trim(),\r\n                strasse: rows[4].trim(),\r\n                testnummer: this.parseNumber(rows[5].trim()),\r\n                pkz: this.parseNumber(rows[6].trim()),\r\n                route_id: selectedRoute\r\n            };\r\n            ret.importCount += 1;\r\n            ret.import.push(model);\r\n        });\r\n        return ret;\r\n    }\r\n    cancelBtnClick() {\r\n        this.props.cancelBtnClick();\r\n    }\r\n    uploadClick() {\r\n        let filialen = this.createFilialen(this.textareaElement ? this.textareaElement.value : \"\");\r\n        if (!filialen) {\r\n            return;\r\n        }\r\n        this.setState({ isUploading: true }, () => {\r\n            this.saveFilialen(filialen.import)\r\n                .then(r => {\r\n                if (r.length === filialen.importCount) {\r\n                    this.props.uploadFinished();\r\n                }\r\n                else {\r\n                    alert(\"NIX OK\");\r\n                }\r\n                return null;\r\n            })\r\n                .catch(error => {\r\n                alert(\"Globaler Error in saveFilialen\");\r\n                this.setState({ isError: true });\r\n            });\r\n        });\r\n    }\r\n    setTextareaElement(element) {\r\n        this.textareaElement = element;\r\n    }\r\n    setSelectRouteElement(element) {\r\n        this.selectRouteElement = element;\r\n    }\r\n    render() {\r\n        console.log(\"render UploadFilialen\");\r\n        if (!this.state.isInitialized) {\r\n            return React.createElement(office_ui_fabric_react_1.Spinner, { label: \"Lade Daten...\" });\r\n        }\r\n        if (this.state.isError) {\r\n            return React.createElement(\"h1\", null, \"Es ist ein Fehler aufgetreten... \");\r\n        }\r\n        if (this.state.isUploading) {\r\n            return React.createElement(office_ui_fabric_react_1.Spinner, { label: \"Importiere Filialen...\" });\r\n        }\r\n        return (React.createElement(react_1.Fragment, null,\r\n            React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                    React.createElement(\"div\", { style: { padding: \"25px\" } },\r\n                        React.createElement(office_ui_fabric_react_1.Label, null, \"Routenfahrt auswählen\"),\r\n                        React.createElement(\"select\", { ref: this.setSelectRouteElement }, this.state.routes.map((route, index) => {\r\n                            return (React.createElement(\"option\", { value: route._id, key: \"r_\" + index }, date_1.getGermanDateString(new Date(route.route_timestamp))));\r\n                        }))))),\r\n            React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                    React.createElement(\"textarea\", { rows: 20, ref: this.setTextareaElement, style: { width: \"100%\" } }))),\r\n            React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                    React.createElement(ButtonRow_1.ButtonRow, { saveButtonProps: {\r\n                            text: \"Upload\",\r\n                            disabled: false,\r\n                            checked: false,\r\n                            onClickFunc: this.uploadClick\r\n                        }, cancelButtonProps: {\r\n                            text: \"Abbrechen\",\r\n                            disabled: false,\r\n                            checked: false,\r\n                            onClickFunc: this.cancelBtnClick\r\n                        } })))));\r\n    }\r\n}\r\nexports.UploadFilialen = UploadFilialen;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst axios_1 = require(\"axios\");\r\nconst react_1 = require(\"react\");\r\nconst ButtonRow_1 = require(\"../../../../global/components/simple/ButtonRow\");\r\nclass UploadRoutes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textareaElement = undefined;\r\n        this.uploadClick = this.uploadClick.bind(this);\r\n        this.cancelClick = this.cancelClick.bind(this);\r\n        this.setRef = this.setRef.bind(this);\r\n    }\r\n    saveRoutes(routes) {\r\n        return new Promise((resolve, reject) => {\r\n            let promises = [];\r\n            routes.forEach(route => {\r\n                promises.push(axios_1.default.post(\"/api/routen\", { route }));\r\n            });\r\n            Promise.all(promises)\r\n                .then(results => {\r\n                console.log(JSON.stringify(results));\r\n                let resultValue = [];\r\n                results.forEach(p => {\r\n                    if (p.data.insertedObjects && p.data.insertedObjects.length > 0) {\r\n                        resultValue = resultValue.concat(p.data.insertedObjects);\r\n                    }\r\n                });\r\n                resolve(resultValue);\r\n            })\r\n                .catch(error => {\r\n                console.log(\"saveRoutes\", JSON.stringify(error));\r\n                reject({ message: \"Kein Einfügen\", error: error });\r\n            });\r\n        });\r\n    }\r\n    createRoutes(value) {\r\n        let returnValues = [];\r\n        if (!value) {\r\n            return returnValues;\r\n        }\r\n        let routes = value.split(\"\\n\");\r\n        routes.forEach(route => {\r\n            let rows = route.split(\"\\t\");\r\n            let r = {\r\n                timestamp: Date.now(),\r\n                route_timestamp: Date.now(),\r\n                ausgaben: [],\r\n                links: []\r\n            };\r\n            returnValues.push(r);\r\n        });\r\n        return;\r\n    }\r\n    uploadClick() {\r\n        let routes = this.createRoutes(this.textareaElement ? this.textareaElement.value : \"\");\r\n        this.props.uploadClick(routes);\r\n    }\r\n    cancelClick() {\r\n        this.props.cancelClick();\r\n    }\r\n    setRef(element) {\r\n        this.textareaElement = element;\r\n    }\r\n    render() {\r\n        console.log(\"render UploadRoutes\");\r\n        return (React.createElement(react_1.Fragment, null,\r\n            React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                    React.createElement(\"textarea\", { cols: 100, rows: 40, ref: this.setRef }))),\r\n            React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                    React.createElement(ButtonRow_1.ButtonRow, { saveButtonProps: {\r\n                            text: \"Upload\",\r\n                            disabled: false,\r\n                            checked: false,\r\n                            onClickFunc: this.uploadClick\r\n                        }, cancelButtonProps: {\r\n                            text: \"Abbrechen\",\r\n                            disabled: false,\r\n                            checked: false,\r\n                            onClickFunc: this.cancelClick\r\n                        } })))));\r\n    }\r\n}\r\nexports.UploadRoutes = UploadRoutes;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst manageRoute_1 = require(\"./manageRoute\");\r\nconst enums_1 = require(\"../../../../enums/enums\");\r\nconst react_1 = require(\"react\");\r\nconst ToolTip_1 = require(\"../../../../global/components/simple/ToolTip\");\r\nconst Routenuebersicht_1 = require(\"../intelligent/Routenuebersicht\");\r\nconst UploadRoutes_1 = require(\"../intelligent/UploadRoutes\");\r\nconst UploadFilialen_1 = require(\"../intelligent/UploadFilialen\");\r\nconst Filialuebersicht_1 = require(\"../intelligent/Filialuebersicht\");\r\nconst Panel_1 = require(\"../../../../global/components/simple/Panel\");\r\nconst Filiale_1 = require(\"../intelligent/Filiale\");\r\nclass Application extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalContent: undefined,\r\n            showModal: false,\r\n            isCalloutVisible: false,\r\n            callOutContent: undefined,\r\n            selectedRoutes: [],\r\n            selectedFilialen: []\r\n        };\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.showCallOut = this.showCallOut.bind(this);\r\n        this.hideCallOut = this.hideCallOut.bind(this);\r\n        this.routeUploaded = this.routeUploaded.bind(this);\r\n        this.showUploadRoutesClick = this.showUploadRoutesClick.bind(this);\r\n        this.uploadFilialen = this.uploadFilialen.bind(this);\r\n        this.showUploadFilialenClick = this.showUploadFilialenClick.bind(this);\r\n        this.editRoute = this.editRoute.bind(this);\r\n        this.addRouteClick = this.addRouteClick.bind(this);\r\n        this.createFiliale = this.createFiliale.bind(this);\r\n        this.editFiliale = this.editFiliale.bind(this);\r\n        this.filialeSavedClick = this.filialeSavedClick.bind(this);\r\n    }\r\n    showUploadFilialenClick() {\r\n        this.setState({\r\n            showModal: true,\r\n            modalContent: (React.createElement(UploadFilialen_1.UploadFilialen, { uploadFinished: this.uploadFilialen, cancelBtnClick: this.closeModal }))\r\n        });\r\n    }\r\n    uploadFilialen() {\r\n        this.closeModal();\r\n    }\r\n    showUploadRoutesClick() {\r\n        this.setState({\r\n            showModal: true,\r\n            modalContent: (React.createElement(UploadRoutes_1.UploadRoutes, { uploadClick: this.routeUploaded, cancelClick: this.closeModal }))\r\n        });\r\n    }\r\n    routeUploaded(routes) {\r\n        this.closeModal();\r\n    }\r\n    addRouteClick() {\r\n        this.setState({\r\n            showModal: true,\r\n            modalContent: (React.createElement(manageRoute_1.ManageRoute, { onExitPage: this.closeModal, pageType: enums_1.PageType.Add }))\r\n        });\r\n        this.hideCallOut();\r\n    }\r\n    closeModal(copiedState = undefined) {\r\n        if (copiedState) {\r\n            copiedState.showModal = false;\r\n            copiedState.modalContent = undefined;\r\n            return copiedState;\r\n        }\r\n        else {\r\n            this.setState({ showModal: false, modalContent: undefined });\r\n        }\r\n    }\r\n    showCallOut(event) {\r\n        console.log(\"MouseIn - \" + event.target[\"tagName\"]);\r\n        if (this.state.isCalloutVisible || this.state.showModal) {\r\n            return;\r\n        }\r\n        this.targetCallOutElement = event.target;\r\n        let title = this.targetCallOutElement.hasAttribute(\"data-info-title\")\r\n            ? this.targetCallOutElement.getAttribute(\"data-info-title\")\r\n            : \"\";\r\n        let description = this.targetCallOutElement.hasAttribute(\"data-info-desc\")\r\n            ? this.targetCallOutElement.getAttribute(\"data-info-desc\")\r\n            : \"\";\r\n        if (!title && !description) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            isCalloutVisible: true,\r\n            callOutContent: React.createElement(ToolTip_1.ToolTip, { Title: title, Description: description })\r\n        });\r\n        return false;\r\n    }\r\n    hideCallOut() {\r\n        console.log(\"MouseOut\");\r\n        this.targetCallOutElement = null;\r\n        this.setState({ isCalloutVisible: false, callOutContent: undefined });\r\n        return false;\r\n    }\r\n    filialeSavedClick() {\r\n        this.closeModal();\r\n    }\r\n    editRoute(routeElement) { }\r\n    editFiliale(filialElement) {\r\n        this.setState({\r\n            showModal: true,\r\n            modalContent: (React.createElement(Filiale_1.Filiale, { cancel_clicked: this.closeModal, pageType: enums_1.PageType.Edit, filialeId: filialElement._id, headerText: \"Filiale bearbeiten\", ok_clicked: this.filialeSavedClick }))\r\n        });\r\n        this.hideCallOut();\r\n    }\r\n    createFiliale() {\r\n        this.setState({\r\n            showModal: true,\r\n            modalContent: (React.createElement(Filiale_1.Filiale, { cancel_clicked: this.closeModal, pageType: enums_1.PageType.Add, filialeId: null, headerText: \"Filiale hinzuf\\u00FCgen\", ok_clicked: this.filialeSavedClick }))\r\n        });\r\n        this.hideCallOut();\r\n    }\r\n    render() {\r\n        console.log(\"render application\");\r\n        if (this.state.showModal && !!this.state.modalContent) {\r\n            return (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" }, this.state.modalContent)));\r\n        }\r\n        return (React.createElement(react_1.Fragment, null,\r\n            React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                    React.createElement(Panel_1.Panel, { contentClass: \"custom-padding-top-10px\", headerText: \"Routen\\u00FCbersicht\", className: \"custom-padding-bottom-10px custom-padding-top-10px\" },\r\n                        React.createElement(Routenuebersicht_1.Routenuebersicht, { onEditRouteClick: this.editRoute, commandbarItems: [\r\n                                {\r\n                                    key: \"newItem\",\r\n                                    name: \"New\",\r\n                                    icon: \"Add\",\r\n                                    onClick: this.addRouteClick\r\n                                },\r\n                                {\r\n                                    key: \"import\",\r\n                                    name: \"Import\",\r\n                                    icon: \"import\",\r\n                                    onClick: this.showUploadRoutesClick\r\n                                }\r\n                            ] })))),\r\n            React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                    React.createElement(Panel_1.Panel, { contentClass: \"custom-padding-top-10px\", headerText: \"Filial\\u00FCbersicht\", className: \"custom-padding-bottom-10px\" },\r\n                        React.createElement(\"div\", null,\r\n                            React.createElement(Filialuebersicht_1.Filialuebersicht, { onEditFilialeClick: this.editFiliale, commandbarItems: [\r\n                                    {\r\n                                        key: \"newItem\",\r\n                                        name: \"New\",\r\n                                        icon: \"Add\",\r\n                                        onClick: this.createFiliale\r\n                                    },\r\n                                    {\r\n                                        key: \"import\",\r\n                                        name: \"Import\",\r\n                                        icon: \"import\",\r\n                                        onClick: this.showUploadFilialenClick\r\n                                    }\r\n                                ] })))))));\r\n    }\r\n}\r\nexports.Application = Application;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst enums_1 = require(\"../../../../enums/enums\");\r\nconst basePage_1 = require(\"../../../../global/components/container/basePage\");\r\nconst ButtonRow_1 = require(\"../../../../global/components/simple/ButtonRow\");\r\nconst Panel_1 = require(\"../../../../global/components/simple/Panel\");\r\nconst date_1 = require(\"../../../../helper/date\");\r\nconst Link_1 = require(\"../stateless/Link\");\r\nconst Ausgabe_1 = require(\"../stateless/Ausgabe\");\r\nconst Filiale_1 = require(\"../stateless/Filiale\");\r\nconst Routenfahrt_1 = require(\"../stateless/Routenfahrt\");\r\nconst uuid_1 = require(\"uuid\");\r\nconst axios_1 = require(\"axios\");\r\nclass ManageRoute extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filialen: [],\r\n            routenfahrten: [],\r\n            ausgaben: [],\r\n            links: []\r\n        };\r\n        this.cancelClick = this.cancelClick.bind(this);\r\n        this.saveClick = this.saveClick.bind(this);\r\n        this.addLink = this.addLink.bind(this);\r\n        this.deleteLink = this.deleteLink.bind(this);\r\n        this.linkChanged = this.linkChanged.bind(this);\r\n        this.addAusgabe = this.addAusgabe.bind(this);\r\n        this.deleteAusgabe = this.deleteAusgabe.bind(this);\r\n        this.ausgabeDescriptionChanged = this.ausgabeDescriptionChanged.bind(this);\r\n        this.ausgabeValueChanged = this.ausgabeValueChanged.bind(this);\r\n        this.deleteFiliale = this.deleteFiliale.bind(this);\r\n        this.addFiliale = this.addFiliale.bind(this);\r\n        this.pkzChanged = this.pkzChanged.bind(this);\r\n        this.einnahmenChanged = this.einnahmenChanged.bind(this);\r\n        this.ausgabenChanged = this.ausgabenChanged.bind(this);\r\n        this.plzChanged = this.plzChanged.bind(this);\r\n        this.testnummerChanged = this.testnummerChanged.bind(this);\r\n        this.fahrdatumChanged = this.fahrdatumChanged.bind(this);\r\n        this.ortChanged = this.ortChanged.bind(this);\r\n        this.strasseChanged = this.strasseChanged.bind(this);\r\n        this.addRoutenfahrt = this.addRoutenfahrt.bind(this);\r\n        this.deleteRoutenfahrt = this.deleteRoutenfahrt.bind(this);\r\n        this.changeRouteDate = this.changeRouteDate.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        let docTitle = \"\";\r\n        switch (this.props.pageType) {\r\n            case enums_1.PageType.Display:\r\n                docTitle = \"Route anzeigen\";\r\n                break;\r\n            case enums_1.PageType.Edit:\r\n                docTitle = \"Route bearbeiten\";\r\n                break;\r\n            case enums_1.PageType.Add:\r\n                docTitle = \"Route hinzufügen\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        document.title = docTitle;\r\n    }\r\n    saveRoutes(routes) {\r\n        return new Promise((resolve, reject) => {\r\n            let promises = [];\r\n            routes.forEach(route => {\r\n                promises.push(axios_1.default.post(\"/api/routen\", { route }));\r\n            });\r\n            Promise.all(promises)\r\n                .then(results => {\r\n                console.log(JSON.stringify(results));\r\n                let resultValue = [];\r\n                results.forEach(p => {\r\n                    if (p.data.insertedObjects && p.data.insertedObjects.length > 0) {\r\n                        resultValue = resultValue.concat(p.data.insertedObjects);\r\n                    }\r\n                });\r\n                resolve(resultValue);\r\n            })\r\n                .catch(error => {\r\n                console.log(\"saveRoutes\", JSON.stringify(error));\r\n                reject({ message: \"Kein Einfügen\", error: error });\r\n            });\r\n        });\r\n    }\r\n    saveFilialen(filialen) {\r\n        return new Promise((resolve, reject) => {\r\n            let promises = [];\r\n            filialen.forEach(filiale => {\r\n                promises.push(axios_1.default.post(\"/api/filialen\", { filiale }));\r\n            });\r\n            Promise.all(promises)\r\n                .then(results => {\r\n                console.log(JSON.stringify(results));\r\n                let resultValue = [];\r\n                results.forEach(p => {\r\n                    if (p.data.insertedObjects && p.data.insertedObjects.length > 0) {\r\n                        resultValue = resultValue.concat(p.data.insertedObjects);\r\n                    }\r\n                });\r\n                resolve(resultValue);\r\n            })\r\n                .catch(error => {\r\n                console.log(\"saveFilialen\", JSON.stringify(error));\r\n                reject({ message: \"Kein Einfügen\", error: error });\r\n            });\r\n        });\r\n    }\r\n    saveClick() {\r\n        console.log(\"Save Click\");\r\n        if (!this.state.routenfahrten || this.state.routenfahrten.length < 0) {\r\n            return;\r\n        }\r\n        let routenModels = [];\r\n        this.state.routenfahrten.forEach(fahrt => {\r\n            let route = {\r\n                route_timestamp: fahrt.getTime(),\r\n                ausgaben: [],\r\n                links: [],\r\n                timestamp: Date.now()\r\n            };\r\n            this.state.ausgaben.forEach(ausgabe => {\r\n                route.ausgaben.push({\r\n                    value: ausgabe.value,\r\n                    description: ausgabe.description,\r\n                    id: ausgabe.id\r\n                });\r\n            });\r\n            this.state.links.forEach(link => {\r\n                route.links.push({\r\n                    link: link.link,\r\n                    text: link.text,\r\n                    id: link.id\r\n                });\r\n            });\r\n            routenModels.push(route);\r\n        });\r\n        this.saveRoutes(routenModels)\r\n            .then(insertedRouten => {\r\n            if (this.state.routenfahrten.length === insertedRouten.length) {\r\n                console.log(\"ROUTES OK!\");\r\n            }\r\n            let filialen = [];\r\n            filialen = this.state.filialen.map(filiale => {\r\n                let routeId = \"\";\r\n                insertedRouten.forEach(route => {\r\n                    if (filiale.fahrdatum === route.route_timestamp) {\r\n                        routeId = route._id;\r\n                    }\r\n                });\r\n                return {\r\n                    ausgaben: filiale.ausgaben,\r\n                    einnahmen: filiale.einnahmen,\r\n                    ort: filiale.ort,\r\n                    pkz: filiale.pkz,\r\n                    plz: filiale.plz,\r\n                    strasse: filiale.strasse,\r\n                    testnummer: filiale.testnummer,\r\n                    timestamp: Date.now(),\r\n                    route_id: routeId\r\n                };\r\n            });\r\n            return this.saveFilialen(filialen);\r\n        })\r\n            .then(insertedFilialen => {\r\n            if (this.state.filialen.length === insertedFilialen.length) {\r\n                console.log(\"FILIALEN OK!\");\r\n            }\r\n        })\r\n            .catch(() => { });\r\n    }\r\n    cancelClick() {\r\n        console.log(\"cancel Click\");\r\n        this.props.onExitPage();\r\n    }\r\n    getRouteSelectOptions() {\r\n        if (!this.state.routenfahrten || this.state.routenfahrten.length < 1) {\r\n            return React.createElement(\"option\", { value: \"\" }, \"Bitte Fahrdaten anlegen\");\r\n        }\r\n        return this.state.routenfahrten.map((fahrt, index) => {\r\n            return (React.createElement(\"option\", { value: index, key: \"fahrt_opt_\" + index }, date_1.getGermanDateString(fahrt)));\r\n        });\r\n    }\r\n    addFiliale() {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.filialen.push({\r\n            index: ns.filialen.length + 1,\r\n            ausgaben: 0,\r\n            einnahmen: 0,\r\n            ort: \"\",\r\n            pkz: 0,\r\n            plz: 0,\r\n            strasse: \"\",\r\n            testnummer: 0,\r\n            timestamp: Date.now(),\r\n            fahrdatum: this.state.routenfahrten.length > 0\r\n                ? this.state.routenfahrten[0].getTime()\r\n                : date_1.setDatePropertiesToZero(new Date()).getTime()\r\n        });\r\n        this.setState(ns);\r\n    }\r\n    deleteFiliale(id) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.filialen.splice(parseInt(id), 1);\r\n        this.setState(ns);\r\n    }\r\n    ausgabenChanged(id, value) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.filialen[parseInt(id)].ausgaben = value;\r\n        this.setState(ns);\r\n    }\r\n    einnahmenChanged(id, value) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.filialen[parseInt(id)].einnahmen = value;\r\n        this.setState(ns);\r\n    }\r\n    pkzChanged(id, value) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.filialen[parseInt(id)].pkz = value;\r\n        this.setState(ns);\r\n    }\r\n    plzChanged(id, value) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.filialen[parseInt(id)].plz = value;\r\n        this.setState(ns);\r\n    }\r\n    testnummerChanged(id, value) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.filialen[parseInt(id)].testnummer = value;\r\n        this.setState(ns);\r\n    }\r\n    fahrdatumChanged(id, value) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.filialen[parseInt(id)].fahrdatum = value;\r\n        this.setState(ns);\r\n    }\r\n    strasseChanged(id, value) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.filialen[parseInt(id)].strasse = value;\r\n        this.setState(ns);\r\n    }\r\n    ortChanged(id, value) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.filialen[parseInt(id)].ort = value;\r\n        this.setState(ns);\r\n    }\r\n    addAusgabe() {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.ausgaben.push({\r\n            description: \"\",\r\n            value: 0,\r\n            id: uuid_1.v4()\r\n        });\r\n        this.setState(ns);\r\n    }\r\n    deleteAusgabe(id) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.ausgaben.splice(parseInt(id), 1);\r\n        this.setState(ns);\r\n    }\r\n    ausgabeValueChanged(id, value) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.ausgaben[parseInt(id)].value = value;\r\n        this.setState(ns);\r\n    }\r\n    ausgabeDescriptionChanged(id, value) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.ausgaben[parseInt(id)].description = value;\r\n        this.setState(ns);\r\n    }\r\n    addLink() {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.links.push({\r\n            link: \"\",\r\n            text: \"\",\r\n            id: uuid_1.v4()\r\n        });\r\n        this.setState(ns);\r\n    }\r\n    deleteLink(id) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.links.splice(parseInt(id), 1);\r\n        this.setState(ns);\r\n    }\r\n    linkChanged(id, value) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.links[parseInt(id)].link = value;\r\n        this.setState(ns);\r\n    }\r\n    addRoutenfahrt() {\r\n        let fahrten = this.state.routenfahrten.concat([\r\n            date_1.setDatePropertiesToZero(new Date())\r\n        ]);\r\n        this.setState({\r\n            routenfahrten: fahrten\r\n        });\r\n    }\r\n    deleteRoutenfahrt(id) {\r\n        let ns = Object.assign({}, this.state);\r\n        ns.routenfahrten.splice(parseInt(id), 1);\r\n        this.setState(ns);\r\n    }\r\n    changeRouteDate(id, value) {\r\n        let d = value || new Date();\r\n        let ns = Object.assign({}, this.state);\r\n        let newFahrten = [];\r\n        ns.routenfahrten.forEach((element, index) => {\r\n            newFahrten.push(index === parseInt(id) ? value : element);\r\n        });\r\n        ns.routenfahrten = newFahrten;\r\n        this.setState(ns);\r\n    }\r\n    render() {\r\n        console.log(\"render ManageRoute\");\r\n        return (React.createElement(basePage_1.BasePage, { IncludeFabricElement: false, Body: React.createElement(\"div\", { className: \"ms-Grid\" },\r\n                React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                    React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                        React.createElement(Panel_1.Panel, { headerText: \"Routenlinks\", className: \"custom-padding-bottom-10px\", headerControls: React.createElement(office_ui_fabric_react_1.ActionButton, { \"data-automation-id\": \"Add Link\", iconProps: { iconName: \"Add\" }, onClick: this.addLink }) }, this.state.links.map((link, index) => {\r\n                            return (React.createElement(Link_1.Link, { key: \"link_\" + index, linkId: index.toString(), linkModel: link, title: \"Link \" + (index + 1), onDeleteClick: this.deleteLink, onLinkHrefChanged: this.linkChanged }));\r\n                        })))),\r\n                React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                    React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                        React.createElement(Panel_1.Panel, { headerText: \"Globale Ausgaben\", className: \"custom-padding-bottom-10px\", headerControls: React.createElement(office_ui_fabric_react_1.ActionButton, { \"data-automation-id\": \"Add Ausgabe\", iconProps: { iconName: \"Add\" }, onClick: this.addAusgabe }) },\r\n                            (!this.state.ausgaben || this.state.ausgaben.length < 1) && (React.createElement(\"div\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"Es wurden bisher keine globalen Ausgaben erfasst\")),\r\n                            this.state.ausgaben.map((ausgabe, index) => {\r\n                                return (React.createElement(Ausgabe_1.Ausgabe, { key: \"ausgabe_\" + index, ausgabeId: index.toString(), onDeleteClick: this.deleteAusgabe, title: \"Ausgabe \" + (index + 1), ausgabeModel: ausgabe, onDescriptionChanged: this.ausgabeDescriptionChanged, onValueChanged: this.ausgabeValueChanged }));\r\n                            })))),\r\n                React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                    React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                        React.createElement(Panel_1.Panel, { headerText: \"Routenfahrdaten verwalten\", className: \"custom-padding-bottom-10px\", headerControls: React.createElement(office_ui_fabric_react_1.ActionButton, { \"data-automation-id\": \"Add Routenfahrt\", iconProps: { iconName: \"Add\" }, onClick: this.addRoutenfahrt }) },\r\n                            (!this.state.routenfahrten ||\r\n                                this.state.routenfahrten.length < 1) && (React.createElement(\"div\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"Es wurden bisher keine Routenfahrdaten erfasst\")),\r\n                            this.state.routenfahrten.map((fahrt, index) => {\r\n                                return (React.createElement(Routenfahrt_1.Routenfahrt, { key: \"routnefahrt_\" + index, onDateChanged: this.changeRouteDate, onDeleteClick: this.deleteRoutenfahrt, routenfahrtId: index.toString(), title: \"Routenfahrt \" + (index + 1), value: fahrt }));\r\n                            })))),\r\n                React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                    React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                        React.createElement(Panel_1.Panel, { headerText: \"Fahrten verwalten\", className: \"custom-padding-bottom-10px\", headerControls: React.createElement(office_ui_fabric_react_1.ActionButton, { \"data-automation-id\": \"Add Ausgabe\", iconProps: { iconName: \"Add\" }, onClick: this.addFiliale }) },\r\n                            (!this.state.filialen || this.state.filialen.length < 1) && (React.createElement(\"div\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"Es wurden bisher keine Filialen erfasst\")),\r\n                            this.state.filialen.map((filiale, index) => {\r\n                                return (React.createElement(Filiale_1.Filiale, { key: \"route_\" + index, id: index.toString(), title: \"Fahrt \" + (index + 1), filiale: filiale, fahrdaten: this.state.routenfahrten, onDeleteClick: this.deleteFiliale, onAusgabenChanged: this.ausgabenChanged, onEinnahmenChanged: this.einnahmenChanged, onFahrdatumChanged: this.fahrdatumChanged, onOrtChanged: this.ortChanged, onPkzChanged: this.pkzChanged, onPlzChanged: this.plzChanged, onStrasseChanged: this.strasseChanged, onTestnummerChanged: this.testnummerChanged, enableDeleteBtn: true }));\r\n                            })))),\r\n                React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                    React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                        React.createElement(ButtonRow_1.ButtonRow, { saveButtonProps: {\r\n                                checked: false,\r\n                                disabled: false,\r\n                                text: \"Speichern\",\r\n                                onClickFunc: this.saveClick\r\n                            }, cancelButtonProps: {\r\n                                checked: true,\r\n                                disabled: false,\r\n                                text: \"Abbrechen\",\r\n                                onClickFunc: this.cancelClick\r\n                            } })))), Header: React.createElement(\"div\", { className: \"ms-font-xxl ms-textAlignCenter\" }, \"Fahrten verwalten\") }));\r\n    }\r\n}\r\nexports.ManageRoute = ManageRoute;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst NumberTextField_1 = require(\"../../../../global/components/simple/NumberTextField\");\r\nconst Panel_1 = require(\"../../../../global/components/simple/Panel\");\r\nconst defaultOption = React.createElement(\"option\", { key: \"-1\" }, \"Bitte einen Wert angeben\");\r\nclass Ausgabe extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteClicked = this.deleteClicked.bind(this);\r\n        this.onDescriptionChanged = this.onDescriptionChanged.bind(this);\r\n        this.onValueChanged = this.onValueChanged.bind(this);\r\n    }\r\n    deleteClicked() {\r\n        this.props.onDeleteClick(this.props.ausgabeId);\r\n    }\r\n    onValueChanged(value) {\r\n        this.props.onValueChanged(this.props.ausgabeId, value);\r\n    }\r\n    onDescriptionChanged(value) {\r\n        this.props.onDescriptionChanged(this.props.ausgabeId, value);\r\n    }\r\n    render() {\r\n        console.log(\"render Ausgabe\");\r\n        return (React.createElement(Panel_1.Panel, { key: \"ausgabe_\" + this.props.ausgabeId, headerText: this.props.title, className: \"custom-padding-bottom-10px\", headerControls: React.createElement(office_ui_fabric_react_1.ActionButton, { \"data-info-title\": this.props.title + \" löschen\", \"data-info-desc\": this.props.title + \" löschen\", iconProps: {\r\n                    iconName: \"Delete\",\r\n                    className: \"img-font-size-large\"\r\n                }, onClick: this.deleteClicked }) }, React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-lg6\" },\r\n                React.createElement(office_ui_fabric_react_1.TextField, { placeholder: \"Beschreibung der Ausgabe (z.B. Tanken)\", required: true, label: \"Beschreibung der Ausgabe\", value: this.props.ausgabeModel.description, onChanged: this.onDescriptionChanged })),\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-lg6\" },\r\n                React.createElement(NumberTextField_1.NumberTextField, { placeholder: \"Ausgaben in Euro\", label: \"Wert der Ausgabe\", required: true, numberValue: this.props.ausgabeModel.value, suffix: \"Euro\", onChanged: this.onValueChanged })))));\r\n    }\r\n}\r\nexports.Ausgabe = Ausgabe;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst NumberTextField_1 = require(\"../../../../global/components/simple/NumberTextField\");\r\nconst Panel_1 = require(\"../../../../global/components/simple/Panel\");\r\nconst date_1 = require(\"../../../../helper/date\");\r\nclass Filiale extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fahrDatumChanged = this.fahrDatumChanged.bind(this);\r\n        this.deleteClicked = this.deleteClicked.bind(this);\r\n        this.pkzChanged = this.pkzChanged.bind(this);\r\n        this.testnummerChanged = this.testnummerChanged.bind(this);\r\n        this.ausgabenChanged = this.ausgabenChanged.bind(this);\r\n        this.einnahmenChanged = this.einnahmenChanged.bind(this);\r\n        this.ortChanged = this.ortChanged.bind(this);\r\n        this.strasseChanged = this.strasseChanged.bind(this);\r\n        this.plzChanged = this.plzChanged.bind(this);\r\n    }\r\n    fahrDatumChanged(event) {\r\n        let index = event.target.selectedIndex;\r\n        let value = event.target.options[index].value;\r\n        this.props.onFahrdatumChanged(this.props.id, parseInt(value));\r\n    }\r\n    deleteClicked() {\r\n        this.props.onDeleteClick(this.props.id);\r\n    }\r\n    pkzChanged(value) {\r\n        this.props.onPkzChanged(this.props.id, value);\r\n    }\r\n    testnummerChanged(value) {\r\n        this.props.onTestnummerChanged(this.props.id, value);\r\n    }\r\n    ausgabenChanged(value) {\r\n        this.props.onAusgabenChanged(this.props.id, value);\r\n    }\r\n    einnahmenChanged(value) {\r\n        this.props.onEinnahmenChanged(this.props.id, value);\r\n    }\r\n    ortChanged(value) {\r\n        this.props.onOrtChanged(this.props.id, value);\r\n    }\r\n    strasseChanged(value) {\r\n        this.props.onStrasseChanged(this.props.id, value);\r\n    }\r\n    plzChanged(value) {\r\n        this.props.onPlzChanged(this.props.id, value);\r\n    }\r\n    render() {\r\n        console.log(\"render Filiale\");\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\", key: \"filiale_\" + this.props.id },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                React.createElement(Panel_1.Panel, { headerText: this.props.title, headerControls: this.props.enableDeleteBtn ? (React.createElement(office_ui_fabric_react_1.ActionButton, { \"data-info-title\": \"Filiale entfernen\", \"data-info-desc\": \"L\\u00F6scht die Filiale\", iconProps: { iconName: \"Delete\" }, onClick: this.deleteClicked })) : null },\r\n                    React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-md5\" },\r\n                            React.createElement(\"div\", null,\r\n                                React.createElement(office_ui_fabric_react_1.Label, null, \"Routenfahrdatum\"),\r\n                                React.createElement(\"select\", { className: \"custom-ddl-control\", onChange: this.fahrDatumChanged, value: this.props.filiale.fahrdatum || undefined }, this.props.fahrdaten.map((fahrtDatum, index) => {\r\n                                    return (React.createElement(\"option\", { key: \"fahrt__\" + index, value: fahrtDatum.getTime() }, date_1.getGermanDateString(fahrtDatum)));\r\n                                })))),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm8 ms-md4\" },\r\n                            React.createElement(NumberTextField_1.NumberTextField, { required: true, placeholder: \"Testnummer\", label: \"Testnummer\", numberValue: this.props.filiale.testnummer, onChanged: this.testnummerChanged })),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm4 ms-md3\" },\r\n                            React.createElement(NumberTextField_1.NumberTextField, { required: true, placeholder: \"Pr\\u00FCfkennziffer\", label: \"Pkz.\", numberValue: this.props.filiale.pkz, onChanged: this.pkzChanged })),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-lg5\" },\r\n                            React.createElement(office_ui_fabric_react_1.TextField, { required: true, placeholder: \"Stra\\u00DFe\", label: \"Stra\\u00DFe\", value: this.props.filiale.strasse, onChanged: this.strasseChanged })),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm4 ms-md3 ms-lg2\" },\r\n                            React.createElement(NumberTextField_1.NumberTextField, { required: true, placeholder: \"Plz\", label: \"Plz\", numberValue: this.props.filiale.plz, onChanged: this.plzChanged })),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm8 ms-md9 ms-lg5\" },\r\n                            React.createElement(office_ui_fabric_react_1.TextField, { required: true, placeholder: \"Ort\", label: \"Ort\", value: this.props.filiale.ort, onChanged: this.ortChanged })),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm6 ms-md6 ms-lg6\" },\r\n                            React.createElement(NumberTextField_1.NumberTextField, { placeholder: \"Einnahmen\", label: \"Einnahmen\", numberValue: this.props.filiale.einnahmen, onChanged: this.einnahmenChanged, suffix: \" \\u20AC\" })),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm6 ms-md6 ms-lg6\" },\r\n                            React.createElement(NumberTextField_1.NumberTextField, { placeholder: \"Ausgaben\", label: \"Ausgaben\", numberValue: this.props.filiale.ausgaben, onChanged: this.ausgabenChanged, suffix: \" \\u20AC\" })))))));\r\n    }\r\n}\r\nexports.Filiale = Filiale;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst defaultOption = React.createElement(\"option\", { key: \"-1\" }, \"Bitte einen Wert angeben\");\r\nclass Link extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteLinkClicked = this.deleteLinkClicked.bind(this);\r\n        this.onLinkHrefChanged = this.onLinkHrefChanged.bind(this);\r\n    }\r\n    deleteLinkClicked() {\r\n        this.props.onDeleteClick(this.props.linkId);\r\n    }\r\n    onLinkHrefChanged(value) {\r\n        this.props.onLinkHrefChanged(this.props.linkId, value);\r\n    }\r\n    render() {\r\n        console.log(\"render Link\");\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\", key: \"link_comp_\" + this.props.linkId },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm2 ms-lg1\" },\r\n                React.createElement(office_ui_fabric_react_1.Label, null,\r\n                    React.createElement(office_ui_fabric_react_1.Link, { href: this.props.linkModel.link, disabled: !this.props.linkModel.link, target: \"_blank\" }, this.props.title))),\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm8 ms-lg-10\" },\r\n                React.createElement(office_ui_fabric_react_1.TextField, { placeholder: \"Link eingeben\", value: this.props.linkModel.link, onChanged: this.onLinkHrefChanged })),\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm2 ms-lg1\" },\r\n                React.createElement(office_ui_fabric_react_1.ActionButton, { \"data-info-title\": \"Link entfernen\", \"data-info-desc\": \"L\\u00F6scht den Link\", iconProps: {\r\n                        iconName: \"Delete\",\r\n                        className: \"img-font-size-large\"\r\n                    }, onClick: this.deleteLinkClicked }))));\r\n    }\r\n}\r\nexports.Link = Link;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst date_1 = require(\"../../../../helper/date\");\r\nconst defaultOption = React.createElement(\"option\", { key: \"-1\" }, \"Bitte einen Wert angeben\");\r\nclass Routenfahrt extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteRoutenfahrtClicked = this.deleteRoutenfahrtClicked.bind(this);\r\n        this.dateChanged = this.dateChanged.bind(this);\r\n    }\r\n    deleteRoutenfahrtClicked() {\r\n        this.props.onDeleteClick(this.props.routenfahrtId);\r\n    }\r\n    dateChanged(date) {\r\n        this.props.onDateChanged(this.props.routenfahrtId, date);\r\n    }\r\n    render() {\r\n        console.log(\"render Routenfahrt\");\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\", key: \"route_\" + this.props.routenfahrtId },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm2 ms-md1 ms-lg1\" },\r\n                React.createElement(office_ui_fabric_react_1.Label, { className: \"ms-fontSize-l ms-textAlignCenter\" }, this.props.title)),\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm8 ms-md8 ms-lg6\" },\r\n                React.createElement(office_ui_fabric_react_1.DatePicker, { placeholder: \"Bitte Routenfahrdatum ausw\\u00E4hlen\", showWeekNumbers: true, showMonthPickerAsOverlay: true, allowTextInput: false, formatDate: date_1.getGermanDateString, firstDayOfWeek: 1, key: \"fahrt\" + this.props.routenfahrtId, value: this.props.value, onSelectDate: this.dateChanged })),\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm2 ms-md2 ms-lg1\" },\r\n                React.createElement(office_ui_fabric_react_1.ActionButton, { \"data-info-title\": \"Fahrdatum entfernen\", \"data-info-desc\": \"L\\u00F6scht das Fahrdatum\", iconProps: {\r\n                        iconName: \"Delete\",\r\n                        className: \"img-font-size-large\"\r\n                    }, onClick: this.deleteRoutenfahrtClicked }))));\r\n    }\r\n}\r\nexports.Routenfahrt = Routenfahrt;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst date_1 = require(\"../../../helper/date\");\r\nexports.defaultColumns = [];\r\nexports.routeOverviewColumns = [\r\n    {\r\n        key: \"column1\",\r\n        name: \"#\",\r\n        fieldName: \"index\",\r\n        minWidth: 30,\r\n        maxWidth: 60,\r\n        isResizable: true,\r\n        isCollapsable: true,\r\n        data: \"number\",\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, item.index);\r\n        }\r\n    },\r\n    {\r\n        key: \"column2\",\r\n        name: \"\",\r\n        fieldName: \"ctx\",\r\n        minWidth: 30,\r\n        maxWidth: 60,\r\n        isResizable: false,\r\n        isCollapsable: false,\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, \"...\");\r\n        }\r\n    },\r\n    {\r\n        key: \"column5\",\r\n        name: \"Fahrdatum\",\r\n        fieldName: \"route_timestamp\",\r\n        minWidth: 70,\r\n        maxWidth: 90,\r\n        isResizable: true,\r\n        isCollapsable: true,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, date_1.getGermanDateString(new Date(item.route_timestamp)));\r\n        }\r\n    },\r\n    {\r\n        key: \"column3\",\r\n        name: \"Bearbeitet am\",\r\n        fieldName: \"modified\",\r\n        minWidth: 100,\r\n        maxWidth: 150,\r\n        isResizable: true,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, date_1.getGermanDateTimeString(new Date(item.modified)));\r\n        },\r\n        isPadded: true\r\n    },\r\n    {\r\n        key: \"column4\",\r\n        name: \"Erstellt am\",\r\n        fieldName: \"created\",\r\n        minWidth: 100,\r\n        maxWidth: 150,\r\n        isResizable: false,\r\n        isCollapsable: false,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, date_1.getGermanDateTimeString(new Date(item.created)));\r\n        }\r\n    }\r\n];\r\nexports.filialOverviewColumns = [\r\n    {\r\n        key: \"column1\",\r\n        name: \"#\",\r\n        fieldName: \"index\",\r\n        minWidth: 30,\r\n        maxWidth: 60,\r\n        isResizable: true,\r\n        isCollapsable: true,\r\n        data: \"number\",\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, item.index);\r\n        }\r\n    },\r\n    {\r\n        key: \"column2\",\r\n        name: \"\",\r\n        fieldName: \"ctx\",\r\n        minWidth: 30,\r\n        maxWidth: 60,\r\n        isResizable: false,\r\n        isCollapsable: false,\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, \"...\");\r\n        }\r\n    },\r\n    {\r\n        key: \"column7\",\r\n        name: \"Straße\",\r\n        fieldName: \"strasse\",\r\n        minWidth: 150,\r\n        maxWidth: 200,\r\n        isResizable: true,\r\n        isCollapsable: true,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, item.strasse);\r\n        }\r\n    },\r\n    {\r\n        key: \"column5\",\r\n        name: \"Plz\",\r\n        fieldName: \"plz\",\r\n        minWidth: 70,\r\n        maxWidth: 90,\r\n        isResizable: true,\r\n        isCollapsable: true,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, item.plz);\r\n        }\r\n    },\r\n    {\r\n        key: \"column6\",\r\n        name: \"Ort\",\r\n        fieldName: \"ort\",\r\n        minWidth: 100,\r\n        maxWidth: 120,\r\n        isResizable: true,\r\n        isCollapsable: true,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, item.ort);\r\n        }\r\n    },\r\n    {\r\n        key: \"column8\",\r\n        name: \"Testnummer\",\r\n        fieldName: \"testnummer\",\r\n        minWidth: 100,\r\n        maxWidth: 120,\r\n        isResizable: true,\r\n        isCollapsable: true,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, item.testnummer);\r\n        }\r\n    },\r\n    {\r\n        key: \"column9\",\r\n        name: \"Pkz\",\r\n        fieldName: \"pkz\",\r\n        minWidth: 30,\r\n        maxWidth: 40,\r\n        isResizable: true,\r\n        isCollapsable: true,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, item.pkz);\r\n        }\r\n    },\r\n    {\r\n        key: \"column3\",\r\n        name: \"Bearbeitet am\",\r\n        fieldName: \"modified\",\r\n        minWidth: 100,\r\n        maxWidth: 150,\r\n        isResizable: true,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, date_1.getGermanDateTimeString(new Date(item.modified)));\r\n        },\r\n        isPadded: true\r\n    },\r\n    {\r\n        key: \"column4\",\r\n        name: \"Erstellt am\",\r\n        fieldName: \"created\",\r\n        minWidth: 100,\r\n        maxWidth: 150,\r\n        isResizable: false,\r\n        isCollapsable: false,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n            return React.createElement(\"span\", null, date_1.getGermanDateTimeString(new Date(item.created)));\r\n        }\r\n    }\r\n];\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst axios_1 = require(\"axios\");\r\nconst timers_1 = require(\"timers\");\r\nconst react_1 = require(\"react\");\r\nclass SystemInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isMountedFinished = false;\r\n        this.state = {\r\n            systemInformation: undefined,\r\n            isInitialized: false,\r\n            intervalId: undefined\r\n        };\r\n        this.loadDevices = this.loadDevices.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"System Informationen\";\r\n        console.log(\"SystemInfo componentDidMount\");\r\n        this.loadDevices().then(() => {\r\n            if (this.isMountedFinished === true) {\r\n                this.setState({ isInitialized: true });\r\n            }\r\n        });\r\n        let interval = timers_1.setInterval(this.loadDevices, 10000);\r\n        this.setState({ intervalId: interval[\"_id\"] });\r\n        this.isMountedFinished = true;\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.intervalId);\r\n        this.isMountedFinished = false;\r\n    }\r\n    loadDevices() {\r\n        if (!this.isMountedFinished) {\r\n            Promise.resolve();\r\n        }\r\n        return axios_1.default.get(\"/api/system\").then(result => {\r\n            this.setState({ systemInformation: result.data[\"system\"] });\r\n        });\r\n    }\r\n    convertRamToMBString(ram) {\r\n        if (isNaN(ram)) {\r\n            return \"-\";\r\n        }\r\n        return (ram / 1024 / 1024).toFixed(0) + \" MB\";\r\n    }\r\n    getUptimeString(uptime) {\r\n        if (isNaN(uptime)) {\r\n            return \"-\";\r\n        }\r\n        let hr = Math.floor(uptime / 60 / 60);\r\n        let days = (hr / 24).toFixed(2);\r\n        return `${hr} Stunden (${days} Tage)`;\r\n    }\r\n    getLabelRowForProperty(label, value) {\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                React.createElement(office_ui_fabric_react_1.Label, { className: \"ms-font-xl ms-fontColor-themePrimary\" }, label),\r\n                React.createElement(\"span\", null, value))));\r\n    }\r\n    getValueFromSystemInfo() {\r\n        return (React.createElement(react_1.Fragment, null,\r\n            this.getLabelRowForProperty(\"Hostname: \", `${this.state.systemInformation.hostname} (${this.state.systemInformation.userName})`),\r\n            this.getLabelRowForProperty(\"Total Memory: \", this.convertRamToMBString(Number(this.state.systemInformation.totalMemory))),\r\n            this.getLabelRowForProperty(\"Free Memory: \", this.convertRamToMBString(Number(this.state.systemInformation.freeMemory))),\r\n            this.getLabelRowForProperty(\"Uptime: \", this.getUptimeString(this.state.systemInformation.uptime)),\r\n            this.getLabelRowForProperty(\"Plattform: \", `${this.state.systemInformation.platform} (${this.state.systemInformation.arch})`)));\r\n    }\r\n    render() {\r\n        if (!this.state.isInitialized) {\r\n            return false;\r\n        }\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                !this.state.systemInformation && (React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"Keine System-Informationen gefunden\")),\r\n                this.state.systemInformation && (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                    React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-lg6 ms-xl3\", key: \"sysinfo_\" }, this.getValueFromSystemInfo()))))));\r\n    }\r\n}\r\nexports.SystemInfo = SystemInfo;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nclass Application extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Vacuum Roboter Hauptseite\";\r\n    }\r\n    render() {\r\n        return (React.createElement(\"h1\", null,\r\n            \"Hello from Vacuum Roboter!\",\r\n            React.createElement(\"br\", null),\r\n            \"Your requested url is\",\r\n            \" \",\r\n            this.props.requestUrl));\r\n    }\r\n}\r\nexports.Application = Application;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst axios_1 = require(\"axios\");\r\nconst BaseLight_1 = require(\"../../../../global/components/simple/BaseLight\");\r\nconst timers_1 = require(\"timers\");\r\nconst intToRGB = require(\"int-to-rgb\");\r\nclass Application extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isMountedFinished = false;\r\n        this.state = {\r\n            gateways: [],\r\n            gatewayLights: [],\r\n            isInitialized: false,\r\n            intervalId: undefined\r\n        };\r\n        this.loadDevices = this.loadDevices.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Yeelight Hauptseite\";\r\n        console.log(\"Yeelight componentDidMount\");\r\n        this.loadDevices().then(() => {\r\n            if (this.isMountedFinished === true) {\r\n                this.setState({ isInitialized: true });\r\n            }\r\n        });\r\n        let interval = timers_1.setInterval(this.loadDevices, 30000);\r\n        this.setState({ intervalId: interval[\"_id\"] });\r\n        this.isMountedFinished = true;\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.intervalId);\r\n        this.isMountedFinished = false;\r\n    }\r\n    loadDevices() {\r\n        if (!this.isMountedFinished) {\r\n            Promise.resolve();\r\n        }\r\n        return axios_1.default.get(\"/api/gateways\")\r\n            .then(results => {\r\n            let gws = results.data[\"gateways\"];\r\n            let gwLights = gws.map(this.mapGatewayToLightModel);\r\n            this.setState({ gateways: gws, gatewayLights: gwLights });\r\n        })\r\n            .catch(error => { });\r\n    }\r\n    mapGatewayToLightModel(gwModel) {\r\n        return {\r\n            id: gwModel.id,\r\n            ip: gwModel.ip,\r\n            power: gwModel.power,\r\n            brightness: gwModel.brightness,\r\n            name: gwModel.name,\r\n            colorTemperature: gwModel.illuminance,\r\n            rgb: gwModel.rgb\r\n        };\r\n    }\r\n    render() {\r\n        if (!this.state.isInitialized) {\r\n            return false;\r\n        }\r\n        console.log(\"Yewelight render\");\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                (!this.state.gatewayLights ||\r\n                    this.state.gatewayLights.length < 1) && (React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"Keine Gateways gefunden\")),\r\n                React.createElement(\"div\", { className: \"ms-Grid-row\" }, this.state.gatewayLights &&\r\n                    this.state.gatewayLights.length > 0 &&\r\n                    this.state.gatewayLights.map((gw, index) => {\r\n                        return (React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-lg6 ms-xl3\", key: \"gwr_\" + index },\r\n                            React.createElement(BaseLight_1.BaseLight, { lightInformation: gw, id: index, onBrightnessChanged: (lightInformation, brightness) => {\r\n                                    axios_1.default.post(\"/api/gateways/\" +\r\n                                        lightInformation.id +\r\n                                        \"/brightness/\" +\r\n                                        brightness).then(this.loadDevices);\r\n                                }, onColorChanged: (lightInformation, color) => {\r\n                                    axios_1.default.post(\"/api/gateways/\" + lightInformation.id + \"/color\", { color }).then(this.loadDevices);\r\n                                }, onColorSchemaChanged: (lightInformation, color, brightness) => {\r\n                                    axios_1.default.post(\"/api/gateways/\" + lightInformation.id + \"/color\", { color })\r\n                                        .then(() => {\r\n                                        return axios_1.default.post(\"/api/gateways/\" +\r\n                                            lightInformation.id +\r\n                                            \"/brightness/\" +\r\n                                            brightness);\r\n                                    })\r\n                                        .then(this.loadDevices);\r\n                                }, onPowerChanged: (lightInformation) => {\r\n                                    axios_1.default.post(\"/api/gateways/\" + lightInformation.id + \"/power\").then(this.loadDevices);\r\n                                } })));\r\n                    })))));\r\n    }\r\n}\r\nexports.Application = Application;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst axios_1 = require(\"axios\");\r\nconst BaseWeatherSensor_1 = require(\"../../../../global/components/simple/BaseWeatherSensor\");\r\nconst timers_1 = require(\"timers\");\r\nconst intToRGB = require(\"int-to-rgb\");\r\nclass Application extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isMountedFinished = false;\r\n        this.state = { sensors: [], isInitialized: false, intervalId: undefined };\r\n        this.loadDevices = this.loadDevices.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Yeelight Hauptseite\";\r\n        console.log(\"Yeelight componentDidMount\");\r\n        this.loadDevices().then(() => {\r\n            if (this.isMountedFinished === true) {\r\n                this.setState({ isInitialized: true });\r\n            }\r\n        });\r\n        let interval = timers_1.setInterval(this.loadDevices, 30000);\r\n        this.setState({ intervalId: interval[\"_id\"] });\r\n        this.isMountedFinished = true;\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.intervalId);\r\n        this.isMountedFinished = false;\r\n    }\r\n    loadDevices() {\r\n        if (!this.isMountedFinished) {\r\n            Promise.resolve();\r\n        }\r\n        return axios_1.default.get(\"/api/sensors\").then(result => {\r\n            this.setState({ sensors: result.data[\"sensors\"] });\r\n        });\r\n    }\r\n    render() {\r\n        if (!this.state.isInitialized) {\r\n            return false;\r\n        }\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                (!this.state.sensors || this.state.sensors.length < 1) && (React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"Keine Sensoren gefunden\")),\r\n                React.createElement(\"div\", { className: \"ms-Grid-row\" }, this.state.sensors &&\r\n                    this.state.sensors.length > 0 &&\r\n                    this.state.sensors.map((sensor, index) => {\r\n                        return (React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-lg6 ms-xl3\", key: \"sensor_container_\" + index },\r\n                            React.createElement(BaseWeatherSensor_1.BaseWeatherSensor, { id: index, sensorInformations: sensor })));\r\n                    })))));\r\n    }\r\n}\r\nexports.Application = Application;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst axios_1 = require(\"axios\");\r\nconst timers_1 = require(\"timers\");\r\nconst Yeelight_1 = require(\"../simple/Yeelight\");\r\nconst react_1 = require(\"react\");\r\nconst intToRGB = require(\"int-to-rgb\");\r\nclass Application extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isMountedFinished = false;\r\n        this.state = { lights: [], isInitialized: false, intervalId: undefined };\r\n        this.colorChangedOnLight = this.colorChangedOnLight.bind(this);\r\n        this.powerChangedOnLight = this.powerChangedOnLight.bind(this);\r\n        this.colorSchemaChangedOnLight = this.colorSchemaChangedOnLight.bind(this);\r\n        this.brightnessChangedOnLight = this.brightnessChangedOnLight.bind(this);\r\n        this.colorTemperatureChangedOnLight = this.colorTemperatureChangedOnLight.bind(this);\r\n        this.reloadLightInformations = this.reloadLightInformations.bind(this);\r\n        this.loadDevices = this.loadDevices.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Yeelight Hauptseite\";\r\n        console.log(\"Yeelight componentDidMount\");\r\n        this.loadDevices().then(() => {\r\n            if (this.isMountedFinished === true) {\r\n                this.setState({ isInitialized: true });\r\n            }\r\n        });\r\n        let interval = timers_1.setInterval(this.loadDevices, 30000);\r\n        this.setState({ intervalId: interval[\"_id\"] });\r\n        this.isMountedFinished = true;\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.intervalId);\r\n        this.isMountedFinished = false;\r\n    }\r\n    loadDevices() {\r\n        if (!this.isMountedFinished) {\r\n            Promise.resolve();\r\n        }\r\n        return axios_1.default.get(\"/api/lights/details\")\r\n            .then(results => {\r\n            this.setState({ lights: results.data[\"lights\"] });\r\n        })\r\n            .catch(error => { });\r\n    }\r\n    reloadLightInformations() {\r\n        axios_1.default.get(\"/api/lights/details\").then(result => {\r\n            this.setState({ lights: result.data.lights });\r\n            let newState = Object.assign({}, this.state);\r\n        });\r\n    }\r\n    colorChangedOnLight(lightInformation, color) {\r\n        let rgb = color.r * 65536 + color.g * 256 + color.b;\r\n        axios_1.default.post(\"/api/lights/\" + lightInformation.id + \"/color/\" + rgb).then(this.reloadLightInformations);\r\n    }\r\n    powerChangedOnLight(lightInformation) {\r\n        axios_1.default.post(\"/api/lights/\" + lightInformation.id + \"/power\").then(this.reloadLightInformations);\r\n    }\r\n    colorTemperatureChangedOnLight(lightInformation, colorTemperature) {\r\n        axios_1.default.post(\"/api/lights/\" + lightInformation.id + \"/temperature/\" + colorTemperature).then(this.reloadLightInformations);\r\n    }\r\n    colorSchemaChangedOnLight(lightInformation, color, brightness) {\r\n        let rgb = color.r * 65536 + color.g * 256 + color.b;\r\n        Promise.all([\r\n            axios_1.default.post(\"/api/lights/\" + lightInformation.id + \"/brightness/\" + brightness),\r\n            axios_1.default.post(\"/api/lights/\" + lightInformation.id + \"/color/\" + rgb)\r\n        ]).then(this.reloadLightInformations);\r\n    }\r\n    brightnessChangedOnLight(lightInformation, brightness) {\r\n        axios_1.default.post(\"/api/lights/\" + lightInformation.id + \"/brightness/\" + brightness).then(this.reloadLightInformations);\r\n    }\r\n    render() {\r\n        if (!this.state.isInitialized) {\r\n            return false;\r\n        }\r\n        console.log(\"Yewelight render\");\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                (!this.state.lights || this.state.lights.length < 1) && (React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"Keine Lampen gefunden\")),\r\n                React.createElement(\"div\", { className: \"ms-Grid-row\" }, this.state.lights &&\r\n                    this.state.lights.length > 0 &&\r\n                    this.state.lights.map((light, index) => {\r\n                        return (React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-lg6 ms-xl3\", key: \"light_container_\" + index },\r\n                            React.createElement(react_1.Fragment, null,\r\n                                React.createElement(Yeelight_1.Yeelight, { lightInformation: light, id: index + 22, onBrightnessChanged: this.brightnessChangedOnLight, onColorChanged: this.colorChangedOnLight, onColorSchemaChanged: this.colorSchemaChangedOnLight, onPowerChanged: this.powerChangedOnLight, onColorTemperatureChanged: this.colorTemperatureChangedOnLight }))));\r\n                    })))));\r\n    }\r\n}\r\nexports.Application = Application;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst office_ui_fabric_react_1 = require(\"office-ui-fabric-react\");\r\nconst Panel_1 = require(\"../../../../global/components/simple/Panel\");\r\nclass Yeelight extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { gateways: [] };\r\n        this.colorSchemes = [\r\n            {\r\n                name: \"Bitte auswählen...\",\r\n                color: { r: 0, g: 0, b: 0 },\r\n                brightness: -1\r\n            },\r\n            {\r\n                name: \"Romantik\",\r\n                color: { r: 235, g: 104, b: 119 },\r\n                brightness: 43\r\n            },\r\n            {\r\n                name: \"Sky\",\r\n                color: { r: 0, g: 255, b: 127 },\r\n                brightness: 43\r\n            }\r\n        ];\r\n        this.brightnessChanged = this.brightnessChanged.bind(this);\r\n        this.togglePower = this.togglePower.bind(this);\r\n        this.setBrightness = this.setBrightness.bind(this);\r\n        this.colorSchemeChanged = this.colorSchemeChanged.bind(this);\r\n        this.colorTemperatureChanged = this.colorTemperatureChanged.bind(this);\r\n        this.onRedChanged = this.onRedChanged.bind(this);\r\n        this.onBlueChanged = this.onBlueChanged.bind(this);\r\n        this.onGreenChanged = this.onGreenChanged.bind(this);\r\n    }\r\n    colorSchemeChanged(event) {\r\n        let schemeIndex = event.currentTarget.selectedIndex;\r\n        let schema = this.colorSchemes[schemeIndex];\r\n        if (!schema || schema.intensity === -1)\r\n            return;\r\n        this.props.onColorSchemaChanged(this.props.lightInformation, schema.color, schema.brightness);\r\n    }\r\n    togglePower() {\r\n        this.props.onPowerChanged(this.props.lightInformation);\r\n    }\r\n    setBrightness(value) {\r\n        this.props.onBrightnessChanged(this.props.lightInformation, value);\r\n    }\r\n    brightnessChanged(value) {\r\n        if (this.sliderDelay) {\r\n            clearTimeout(this.sliderDelay);\r\n        }\r\n        this.sliderDelay = setTimeout(() => {\r\n            this.setBrightness(value);\r\n        }, 400);\r\n    }\r\n    colorTemperatureChanged(value) {\r\n        if (this.sliderDelay) {\r\n            clearTimeout(this.sliderDelay);\r\n        }\r\n        this.sliderDelay = setTimeout(() => {\r\n            this.props.onColorTemperatureChanged(this.props.lightInformation, value);\r\n        }, 400);\r\n    }\r\n    onColorChanged(color) {\r\n        this.props.onColorChanged(this.props.lightInformation, color);\r\n    }\r\n    onRedChanged(value) {\r\n        let color = Object.assign({}, this.props.lightInformation.rgb);\r\n        color.r = value;\r\n        if (this.sliderDelay) {\r\n            clearTimeout(this.sliderDelay);\r\n        }\r\n        this.sliderDelay = setTimeout(() => {\r\n            this.onColorChanged(color);\r\n        }, 400);\r\n    }\r\n    onBlueChanged(value) {\r\n        let color = Object.assign({}, this.props.lightInformation.rgb);\r\n        color.b = value;\r\n        if (this.sliderDelay) {\r\n            clearTimeout(this.sliderDelay);\r\n        }\r\n        this.sliderDelay = setTimeout(() => {\r\n            this.onColorChanged(color);\r\n        }, 400);\r\n    }\r\n    onGreenChanged(value) {\r\n        let color = Object.assign({}, this.props.lightInformation.rgb);\r\n        color.g = value;\r\n        if (this.sliderDelay) {\r\n            clearTimeout(this.sliderDelay);\r\n        }\r\n        this.sliderDelay = setTimeout(() => {\r\n            this.onColorChanged(color);\r\n        }, 400);\r\n    }\r\n    render() {\r\n        console.log(\"Yeelight render\");\r\n        return (React.createElement(\"div\", { className: \"ms-Grid-row\", key: \"list_\" + this.props.id },\r\n            React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12 ms-lg12\" },\r\n                React.createElement(Panel_1.Panel, { headerText: this.props.lightInformation.name, className: \"custom-padding-bottom-10px\" },\r\n                    React.createElement(\"div\", { className: \"ms-Grid-row\" },\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm6\" },\r\n                            React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, this.props.lightInformation.power\r\n                                ? \"Licht anschalten\"\r\n                                : \"Licht ausschalten\"),\r\n                            React.createElement(office_ui_fabric_react_1.Toggle, { key: \"light_power_\" + this.props.id, checked: this.props.lightInformation.power, onText: \"On\", offText: \"Off\", onChanged: this.togglePower })),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm6\" },\r\n                            React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"Farbschema\"),\r\n                            React.createElement(\"select\", { onChange: this.colorSchemeChanged, style: { padding: \"10px\", width: \"100%\" }, disabled: !this.props.lightInformation.power }, this.colorSchemes.map((schema, index) => {\r\n                                return (React.createElement(\"option\", { key: \"option_schema_\" + index, value: index }, schema.name));\r\n                            }))),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                            React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"Leuchtst\\u00E4rke\"),\r\n                            React.createElement(office_ui_fabric_react_1.Slider, { min: 1, max: 100, step: 1, disabled: !this.props.lightInformation.power, value: this.props.lightInformation.brightness, showValue: true, onChange: this.brightnessChanged })),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                            React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"Farbtemperatur\"),\r\n                            React.createElement(office_ui_fabric_react_1.Slider, { min: 1700, max: 6500, step: 1, disabled: !this.props.lightInformation.power, value: this.props.lightInformation.colorTemperature, showValue: true, onChange: this.colorTemperatureChanged })),\r\n                        React.createElement(\"div\", { className: \"ms-Grid-col ms-sm12\" },\r\n                            React.createElement(\"h1\", { className: \"ms-font-xl ms-fontColor-themePrimary\" }, \"RGB Farben\"),\r\n                            React.createElement(office_ui_fabric_react_1.Slider, { label: \"Rot\", min: 0, max: 255, step: 1, disabled: !this.props.lightInformation.power, value: this.props.lightInformation.rgb.r, showValue: true, onChange: this.onRedChanged }),\r\n                            React.createElement(office_ui_fabric_react_1.Slider, { label: \"Gr\\u00FCn\", min: 0, max: 255, step: 1, disabled: !this.props.lightInformation.power, value: this.props.lightInformation.rgb.g, showValue: true, onChange: this.onGreenChanged }),\r\n                            React.createElement(office_ui_fabric_react_1.Slider, { label: \"Blau\", min: 0, max: 255, step: 1, disabled: !this.props.lightInformation.power, value: this.props.lightInformation.rgb.b, showValue: true, onChange: this.onBlueChanged })))))));\r\n    }\r\n}\r\nexports.Yeelight = Yeelight;\r\n"],"sourceRoot":""}